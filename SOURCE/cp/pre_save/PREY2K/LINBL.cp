SUBROUTINE LINBL
;
;
;		HANDLES LINE ITEM SCREEN OF BILLS
;
	OORDNO	,D
	ODISC	,D
	NOITMS	,D
	RUNTOT	,D
	TAXTOT	,D
	TOTWGT	,D
	OCOST	,D
	WHLORD	,D
	D	,D
	V	,D
RECORD ORDLIN   	
		.INCLUDE 'DEF:RD045A.DEF'
RECORD	,X		
		.INCLUDE 'DEF:RD045D.DEF'
RECORD ITMMAS
		.INCLUDE 'DEF:RD041A.DEF'
RECORD DUMMAS,X
		.INCLUDE 'DEF:RD041B.DEF'
RECORD ITMIDX
		.INCLUDE 'DEF:RD042A.DEF'
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD
	BLANKS	,A12
	SELECT	,D1
	ORDNOA	,A6
	ENTRY	,A12
	INXCTL	,D1
	CNGCTL	,D1
	WHATNO	,D2
	DECMAL	,D10
	OPTION	,D1
	QTYSHP	,D5
	QTYMSK	,A6
	MASK	,A10,'ZZ,ZZZ.XX-'
	NXTROW	,D2
	SAVKEY	,A8
	SVLREC	,D5
	LROW	,D2
	LINROW	,D2,02
	ENDLIN	,D1
	ALPHA	,A10
	COUNT	,D1
	COL2	,D2
	ROW2	,D2
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1
	OR041	,D5
	SRCCTL	,D1
	BSMID	,D5
PROC
	IF (WHLORD) XCALL WATE(3,V)
	LOKCTL = 1
	XCALL IO (09,DUMMAS,1,READ,LOKCTL)
	OR041 = ORG041
	ENDLIN =
	CALL FNDFST
	IF (ENDLIN) RETURN
;;;	IF (D.NE.0) CALL NEWDSC
	IF (D.NE.0) CALL NEWDS2		;;;
	ORDNOA = OORDNO,'XXXXXX'
	IF (WHLORD) GO TO LNLOOP
	XCALL OUTPT (2,1,2,'\',1)
	XCALL OE7(ORDNOA,V)
LNLOOP,
	IF (WHLORD) GO TO WRTL
	CALL DSPLIN
	CALL CNGLIN
WRTL,
					;Capture the Item's unit cost
	SRCCTL =
	XCALL SERCH (10,ITMIDX,LITMNO,1,15,OR041,BSMID,SRCCTL,4,16,20,0,0,0,0)
	GO TO (DELETE), SRCCTL
	LOKCTL = 1
	XCALL IO (09,ITMMAS,IRC041,READ,LOKCTL)
;;;	IF (LITMNO.NE.'???') LCOST = AVGCST # 1
	IF (LITMNO.NE.'???') LCOST = AVGCST
DELETE,	
	CALL WRTLIN
	CALL RDLIN
	IF (ENDLIN.AND.NOITMS) GO TO NOLINE
	IF (ENDLIN) RETURN
	GO TO LNLOOP
;
;
FNDFST,
	RUNTOT =
	TAXTOT =
	TOTWGT =
	LORDNO = OORDNO
	LINSEQ =
	LOKCTL = 1
;;;	XCALL ISIO (5,ORDLIN,ORDKEY,READ,LOKCTL)
	XCALL ISIO (5,ORDLIN,LORDNO,READ,LOKCTL)	;;;
	IF (LOKCTL.EQ.3) GO TO NOLINE
	IF (LORDNO.NE.OORDNO) GO TO NOLINE
;	SAVKEY = ORDKEY, 'XXXXXXXX'		;COP31
	SAVKEY = ORDKEY				;COP31
	LINROW = 2
	RETURN
NOLINE,
	XCALL MESAG('NO ITEMS IN THIS ORDER',1)
	NOITMS = 1
	ENDLIN = 1
	RETURN
RDLIN,
	LOKCTL = 1
	XCALL IOS (5,ORDLIN,READ,LOKCTL)
	XCALL OUTPT (12,1,1,'\',V)
	IF (LOKCTL.EQ.2) GO TO EOFLIN
	IF (LORDNO.NE.OORDNO) GO TO EOFLIN
	IF (LQTYOR.EQ.0) GO TO RDLIN
	RETURN
EOFLIN,
	ENDLIN = 1
	UNLOCK 5
	RETURN
DSPLIN,
	INCR LINROW
	IF (LINROW.GE.12) CALL SCRUP
	XCALL OUTPT (LINROW,1,0,LITMNO,V)
	XCALL OUTPT (0,0,0,' ',V)
	LROW = (LINROW * V) + 1
	XCALL OUTPT (LROW,3,0,LDESCR,1)
	IF (LFLAG.EQ.0) LQTYSH = LQTYOR - LQTYBO
	ROW = LINROW
	QTYMSK = LQTYOR, 'ZZZZX-'
	XCALL OUTPT (ROW,41,0,QTYMSK,V)
	COL = 48
	QTYMSK = LQTYSH, 'ZZZZX-'
	XCALL OUTPT (ROW,COL,0,QTYMSK,V)
	IF (LSTATS.NE.1) GO TO DSPPRC
	COL = 53
	QTYMSK = LQTYBO, 'ZZZX-'
	XCALL OUTPT (ROW,COL,0,QTYMSK,V)
DSPPRC,
	CTL (4,8) = '58,08'
	DECMAL = LPRICE
;;;	CALL DSPDLR
	CALL DSP3DP
	CTL (4,8) = '68,02'
	DECMAL = LDISC
	CALL DSPNUM
	CALL EXEPRC
	ALPHA = DECMAL, MASK
	XCALL OUTPT (LINROW,71,0,ALPHA,V)
	RETURN
SCRUP,
	XCALL OUTPT (12,1,0,'\',V)
	XCALL OUTPT (10,10,-1,'CNTRL',V)
	XCALL OE7(ORDNOA,V)
	LINROW = 11
	RETURN
CNGLIN,
	XCALL OUTPT (12,1,1,'BILL THIS ITEM ?',V)
	CTL = '12,19,01,00,YY'
	CALL INPUT
	GO TO (ANYCN2), INXCTL
	LFLAG =
	XCALL OUTPT (LINROW,1,1,'\',V)
	NXTROW = (LINROW * V) + 1
	XCALL OUTPT (NXTROW,1,1,'\',1)
	LINROW = LINROW - 1
	RETURN
EXEPRC,
;;;	DECMAL = (LPRICE*LQTYSH) - ((LDISC*LPRICE*LQTYSH)/100)
;;;	DECMAL = DECMAL - ((LODISC*DECMAL)/100)

	DECMAL = ((LQTYSH)*LPRICE)#1				;;;
&		-(((LQTYSH*LPRICE)#1*LDISC)#2)			;;;
	DECMAL = DECMAL - ((DECMAL*LODISC)#2)			;;;

	RETURN
ANYCN2,
	LFLAG = 1
	CNGCTL = 2
	XCALL ANYCN(CNGCTL,WHATNO)
	GO TO (ENDCN2,CNGBR2), CNGCTL + 1
CNGBR2,
	XCALL OE4(6,V)
	CTL = '12,66,01,00,# '
	CALL INPUT
	IF (INXCTL) GO TO ANYCN2
	CALL DEFLT1
	ROW = LINROW
	SELECT = ENTRY(1,1)
	IF (ENTRY(1,1).EQ.'0') GO TO ANYCN2
	GO TO (SHPQTY,PRC,DSCNT), SELECT
BADCN2,
	XCALL MESAG('INVALID CHANGE',1)
	GO TO ANYCN2
ENDCN2,
	LFLAG = 1
	RETURN
SHPQTY,
	CTL (4,14) = '48,05,00,#-'
	CALL INPUT
	CALL DEFLT0
	LQTYSH = ENTRY
;;;	IF (LQTYSH.GT.LQTYOR) CALL ADJUST
;;;	IF (LQTYSH.NE.LQTYOR - LQTYBO) CALL ADJBO
;;;	IF (LQTYSH.LT.LQTYOR) CALL ADJBO
	IF (LQTYSH.LE.LQTYOR) CALL ADJBO	;SSQ 8-1-97
	GO TO EXTPRC
ADJBO,
	IF (LQTYSH.GE.LQTYOR) GOTO CLRBO
	LQTYBO = LQTYOR - LQTYSH
	IF (LSTATS.NE.2) LSTATS = 1
	ALPHA(1,5) = LQTYBO,'ZZZZ-'
	XCALL OUTPT (LINROW,53,0,ALPHA(1,5),V)
	RETURN
CLRBO,
	LQTYBO =
	LSTATS =
	XCALL OUTPT (LINROW,53,0,'     ',V)
	RETURN
PRC,
;;;	CTL (4,14) = '58,07,00,$ '
;;;	CALL INPUT
	CTL (4,14) = '58,08,01,# '		;;;
	CALL INPUT
	DECMAL = ENTRY				;;;
	CALL DSP3DP				;;;
	CALL DEFLTP
	LPRICE = ENTRY
	GO TO EXTPRC
DSCNT,
	CTL (4,14) = '68,02,00,#N'
	CALL INPUT
	CALL DEFLTD
	LDISC = ENTRY
EXTPRC,
	CALL EXEPRC
	ALPHA = DECMAL, MASK
	XCALL OUTPT (LINROW,71,0,ALPHA,V)
	GO TO ANYCN2
ADJUST,
	LQTYSH = LQTYOR
	QTYMSK = LQTYSH, 'ZZZZX-'
	XCALL OUTPT (ROW,48,0,QTYMSK,V)
	RETURN
DEFLT0,
	IF (ENTRY.EQ.'    ') ENTRY (1,5) = '0     '
	QTYSHP = ENTRY
	QTYMSK = QTYSHP, 'ZZZZX-'
	XCALL OUTPT (ROW,48,0,QTYMSK,V)
	RETURN
DEFLTP,
	IF (ENTRY.EQ.'       ') ENTRY(1,7) = '0      '
	DECMAL = ENTRY(1,7)
	ALPHA(1,9) = DECMAL,'Z,ZZZ.XXX'
	XCALL OUTPT (ROW,58,0,ALPHA(1,9),V)
	RETURN
DEFLTD,
	IF (ENTRY.EQ.'  ') ENTRY (1,2) = '0 '
	DECMAL = ENTRY(1,2)
	ALPHA(1,2) = DECMAL,'ZX'
	XCALL OUTPT (ROW,68,0,ALPHA(1,2),V)
	RETURN
WRTLIN,
	IF (WHLORD.EQ.0) GO TO WRTLN1
	LQTYSH = LQTYOR - LQTYBO
	LFLAG = 1
WRTLN1,
	IF (LFLAG.EQ.0) GO TO WRTLN2
	CALL EXEPRC
	RUNTOT = RUNTOT + DECMAL
;;;	OCOST = OCOST + (LCOST*LQTYSH)
	OCOST = OCOST + (LCOST*LQTYSH)#1	;;;
	TOTWGT = TOTWGT + (LQTYSH*LITMWT)
	  LTXFLG = 1				;;;added 10/14/93 to force taxable
	IF (LTXFLG) TAXTOT = TAXTOT + DECMAL
	NOITMS =
WRTLN2,
	LOKCTL = 1
	XCALL ISIO (5,ORDLIN,ORDKEY,WRITE,LOKCTL)
	RETURN

DSPNUM,
	OPTION = 1
	GOTO CALDSP
DSPDTE,
	OPTION = 2
	GOTO CALDSP
DSPDLR,
	OPTION = 3
	GOTO CALDSP		;;;
DSP3DP,				;;;
	OPTION = 4		;;;
CALDSP,
	XCALL DSPLY(MAX,ROW,COL,DECMAL,OPTION,V)
	RETURN
DEFLT1,
	IF (ENTRY.EQ.BLANKS) ENTRY(1,1) = '0'
	XCALL OUTPT (ROW,COL,0,ENTRY(1,1),V)
	RETURN
INPUT,
	XCALL INPUT(ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
NEWDSC,
	LOKCTL = 1
	XCALL IOS (5,ORDLIN,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO EOFILE
	IF (LORDNO.NE.OORDNO) GO TO EOFILE
	IF (LODISC.EQ.ODISC) GO TO NEWDSC
NEWDS2,
	LODISC = ODISC
	LOKCTL = 1
	XCALL ISIO (5,ORDLIN,ORDKEY,WRITE,LOKCTL)
	GO TO NEWDSC
EOFILE,
	ORDKEY = SAVKEY
	LOKCTL = 1
;;;	XCALL ISIO (5,ORDLIN,ORDKEY,READ,LOKCTL)
	XCALL ISIO (5,ORDLIN,LORDNO,READ,LOKCTL)	;;;
	IF (LOKCTL) CALL FNDFST
	RETURN
END
