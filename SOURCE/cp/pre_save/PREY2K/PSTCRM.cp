; PSTCRM / COP 
;
;
;		::PCPYCOP.DEF::
;*********************************************************************
;		CUSTOMER ORDER PROCESSING 
;		
;		RELEASED: AUGUST 1, 1984 (d70s10)
;***********************************************************************
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984
;		MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;
;		POSTS CREDIT MEMO AMOUNTS TO INVENTORY MASTER FILE
;
RECORD
	,A64,'THIS MATERIAL CONTAINS THE VALUABLE PROPERTIES AND TRADE SECRETS'
	,A62,'OF MCBA, EMBODYING CONFIDENTIAL INFORMATION AND IDEAS, NO PART'
	,A56,'OF WHICH MAY BE USED AND/OR DISCLOSED WITHOUT MCBAs DULY'
	,A55,'AUTHORIZED LICENSE AGREEMENT AND/OR WRITTEN PERMISSION.'
	,A61,'COPYRIGHT (C) MCBA, AN UNPUBLISHED WORK. ALL RIGHTS RESERVED.'

RECORD CRMHDR		
		.INCLUDE 'DEF:RD046A.DEF'
RECORD CRMLIN		
		.INCLUDE 'DEF:RD047A.DEF'
RECORD INVMAS		
		.INCLUDE 'DEF:RD041A.DEF'
RECORD DUMINV ,X	
		.INCLUDE 'DEF:RD041B.DEF'
RECORD INVIDX		
		.INCLUDE 'DEF:RD042A.DEF'
RECORD
	ENTRY	,A2
	INXCTL	,D1
	KEY	,A15
	BSEND	,D5
	BSMID	,D5
	SRCCTL	,D1
	SWITCH	,D1
	ENDLIN	,D1
	SKPLIN	,D1
	EXEPRC	,D8
	EXECST	,D8
	CTR	,D2
	LOCTNS	,D2
	V	,D1
	SAVMS1	,A58
	ERRMS1	,A58,'LOCATION      DOES NOT EXIST FOR ITEM                   IN'
	ERRMS2	,A58,'THE INVENTORY MASTER FILE. THE QUANTITY OF       HAS NOT  '
	ERRMS3	,A58,'BEEN RETURNED TO INVENTORY. PLEASE NOTE THE ITEM#,LOCATION'
	ERRMS4	,A58,'AND QUANTITY AND MAKE THE PROPER ADJUSTMENT THROUGH       '
	ERRMS5	,A58,'LOCATION MAINTENANCE.   TYPE "C" TO CONTINUE.             '
	COL2	,D2
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1
PROC
	XCALL TERID(V)
	XCALL OUTPT (1,1,1,'UPDATE INVENTORY FILE',V)
	CALL OPENS
NXTITM,
	CALL GETLIN
	IF (ENDLIN) GO TO END
	CALL UPDINV
	GO TO NXTITM
END,
	CLOSE 2
	CLOSE 1
	XCALL PGCHN ('CP:CSLHJL',1)
;
OPENS,
	SWITCH = 5
	XCALL FILES(2,'I',42,SWITCH)			;FILE # 42 -- INVIDX FILE
	SWITCH = 5
	XCALL FILES(6,'I',46,SWITCH)			;FILE # 46 -- CRMHDR FILE
	SWITCH = 5
	XCALL FILES(7,'I',47,SWITCH)			;FILE # 47 -- CRMLIN FILE
	SWITCH = 5
	XCALL FILES(1,'U',41,SWITCH)			;FILE # 41 -- INVMAS FILE
	LOKCTL = 1
	XCALL IO (1,INVMAS,1,READ,LOKCTL)
	BSEND = ORG041
	LOCTNS = NUMLOC
	LOKCTL = 1
	XCALL IOS (6,CRMHDR,READ,LOKCTL)
	IF (LOKCTL.EQ.2) ENDLIN = 1
	IF (LOKCTL.EQ.2) GO TO END
	LOKCTL = 1
	XCALL IOS (7,CRMLIN,READ,LOKCTL)
	IF (LOKCTL.EQ.2) ENDLIN = 1
	IF (LOKCTL.EQ.2) GO TO END
	RETURN
;
GETLIN,
	SKPLIN =
	LOKCTL = 1
	XCALL IOS (7,CRMLIN,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO EOFLIN
	IF (CLDESC.EQ.']]]CANCEL') GO TO GETLIN
	IF (CLITEM.EQ.']]]]]]') GO TO EOFLIN
	CALL CHKHDR
	IF (SKPLIN) GO TO GETLIN
	RETURN
EOFLIN,
	ENDLIN = 1
	RETURN
CHKHDR,
	IF (CCRMNO.EQ.CLCRNO) GO TO TSTHDR
	IF (CRMHDR.EQ.']]]]]]') GOTO SKPHDR
	IF (CCRMNO.GT.CLCRNO) GO TO SKPHDR
RDHDR,
	LOKCTL = 1
	XCALL IOS (6,CRMHDR,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO SKPHDR
	GO TO CHKHDR
TSTHDR,
	IF (CCUSNM.EQ.']]]CANCEL'.OR.CCRMDT.EQ.0) GOTO RDHDR
	RETURN
SKPHDR,
	SKPLIN = 1
	RETURN
;
UPDINV,
	CALL FNDINV
	IF (SRCCTL) RETURN
	CALL SETINV
	RETURN
FNDINV,
	KEY = CLITEM
	XCALL SERCH (2,INVIDX,KEY,1,15,BSEND,BSMID,SRCCTL,4,16,20,0,0,0,0)
	RETURN
SETINV,
	LOKCTL = 1
	XCALL IO (1,INVMAS,IRC041,READ,LOKCTL)
	IF (CLQTY.GE.0) GO TO SET1
	CLQTY = -CLQTY
	CTR =
FNDLOC,
	INCR CTR
	IF (CTR.GT.LOCTNS.OR.LOC(CTR).EQ.'  ') GOTO BADLOC
	IF (LOC(CTR).NE.CLLOC) GOTO FNDLOC
	QTYONH(CTR) = QTYONH(CTR) + CLQTY
SET1,
	CLQTY = -CLQTY
	QTYMTD = QTYMTD + CLQTY
	QTYYTD = QTYYTD + CLQTY
	USEMTD = USEMTD + CLQTY
	USEYTD = USEYTD + CLQTY
	IF (CLITEM.EQ.'???') AVGCST = CLCOST*10
	EXEPRC = (CLQTY*CLPRCE) - ((CLDISC*CLQTY*CLPRCE)/100)
	EXEPRC = EXEPRC - ((EXEPRC*CDSCNT)/100)
	EXECST = (CLQTY*AVGCST)#1
	SLSMTD = SLSMTD + EXEPRC
	SLSYTD = SLSYTD + EXEPRC
	CSTMTD = CSTMTD + EXECST
	CSTYTD = CSTYTD + EXECST
	LOKCTL = 1
	XCALL IO (1,INVMAS,IRC041,WRITE,LOKCTL)
	RETURN
BADLOC,
	ERRMS1(11,12) = CLLOC
	ERRMS1(40,54) = CLITEM
	ERRMS2(44,48) = CLQTY,'ZZZZX'
	XCALL OUTPT (2,1,2,'\',1)
	XCALL OUTPT (7,7,-1,'CNTRL',V)
	XCALL OUTPT (7,0,-1,'CNTRL',V)
	XCALL OUTPT (0,0,0,'\',V)
	XCALL OUTPT (4,10,0,ERRMS1,V)
	XCALL OUTPT (5,10,0,ERRMS2,V)
	XCALL OUTPT (6,10,0,ERRMS3,V)
	XCALL OUTPT (7,10,0,ERRMS4,V)
	XCALL OUTPT (8,10,0,ERRMS5,V)
INPTYN,
	XCALL INPUT (8,48,1,1,'A ',ENTRY,INXCTL,V)
	IF (ENTRY(1,1).NE.'C') GOTO INPTYN
	XCALL WATE (4,V)
	GO TO SET1
END
