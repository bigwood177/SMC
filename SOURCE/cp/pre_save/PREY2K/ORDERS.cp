; orders.cop - new order processing modules
;
;
record ordhdr
		.include 'def:rd044a.def'
record ordlin
		.include 'def:rd045a.def'
record		,x
		.include 'def:rd045d.def'
record ducacc
		.include 'def:rd175a.def'
record itmmas
		.include 'def:rd041a.def'
record itmctl	,x
		.include 'def:rd041b.def'
record itmidx
		.include 'def:rd042a.def'
record cusmas
		.include 'def:rd001a.def'
record cusctl	,x
		.include 'def:rd001b.def'
record cusidx
		.include 'def:rd002a.def'
record copctl
		.include 'def:rd060a.def'
record arterm
		.include 'def:rd170a.def'
record artctl	,x
		.include 'def:rd170b.def'
record shipto
		.include 'def:rd171a.def'
record shtctl	,x
		.include 'def:rd171b.def'
record shpvia
		.include 'def:rd172a.def'
record shvctl	,x
		.include 'def:rd172b.def'
record ducfil					; table of gauge parameters
		.include 'def:rd174a.def'
RECORD SKEY
	XCUSNO	,D6
	SHPNO	,D4
RECORD PARAM
	.INCLUDE 'DEF:PARAM2.DEF'

RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD DHDR1
		,A40,	'TYPE CAT    STY  SEAM SEAL   QT/LB  DUCT'
		,A40,	' SIZE    GAUGE      PRICE  UM       EXT '
RECORD DHDR2
		,A40,	'---- ------ ---- ---- ----   -----  ----'
		,A40,	'-------  -----  ---------  --  -------- '
RECORD
	CTRLW	,D1
	ESTIMA	,D1
	SELECT	,D1
	V	,D1
	SWITCH	,D1
	RUNTOT	,D10
	EXPRCE	,D10
	ROW2	,D2
	ROW3	,D2
	ENTRY	,A36
	INXCTL  ,D1
	ALPHA	,A25
	BLANKS	,A25
	MASK	,A18	,'XXXXXXXXXXXXXXXXXX'
	ACMASK	,A8	,'XXXX-XXX'
	DLRMSK	,A11	,'ZZZ,ZZZ.XX-'
	NUMASK	,A10	,'ZZZZZZZZX-'
	D3PMSK	,A11	,'ZZZZZZ.XXX-'
	CNGCTL	,D1
	WHATNO	,D2
	OPTION	,D1
	DECMAL	,D18
	KEY   	,A18
	ORGCUS	,D5
	SHVFIL	,A14
	ORGSHV	,D5
	SHTFIL	,A14
	ORGSHT	,D5
	ARTFIL	,A14
	ORGART	,D5
	ORGITM	,D5
	BSMID	,D5
	SRCCTL	,D1
	ORDNOA	,A6
	TMPORD	,D6
	TCHAR	,D3
	DCHAR	,D3
	TODAY	,D6
	READ	,D1,	0	;USED FOR IO SUBROUTINE
	WRITE	,D1,	1	;USED FOR IO SUBROUTINE
	STORE	,D1,	2	;USED FOR ISIO SUBROUTINE
	DELETE	,D1,	3
	LOKCTL	,D1
	SAVKEY	,D18
	CNGKEY	,D1
	SAVITM	,A15	;SAVE THE LAST ITEM NUMBER *** NOTE SIZE ***
	DPND	,D6
	DSIZ	,D3
	WTPIN	,D6
	PRPPN	,D6
	WRANGL	,A12
	INCH	,D2
	DASH	,D2
	I	,D2
	DEC1	,D18
	DEC2	,D18
	DEC3	,D18
	DEC4	,D18
	FIL174	,A14
PROC
	XCALL TERID (V)
	XCALL RDATE (TODAY)
	XCALL OUTPT (1,1,2,'ORDER PROCESSING',1)
	XCALL OUTPT (2,1,0,'OPEN FILES ',1)
OPEN1,
	XCALL OUTPT (0,0,0,'.',1)
	XCALL FILES (4,'SU',44,SWITCH)
	IF (SWITCH.NE.9) GOTO OPEN2
	GOTO ABORT
OPEN2,
	XCALL OUTPT (0,0,0,'.',1)
	XCALL FILES (5,'SU',45,SWITCH)
	IF (SWITCH.NE.9) GOTO OPEN3
	CALL CLOSE1
	GOTO ABORT
OPEN3,
	XCALL OUTPT (0,0,0,'.',1)
	XCALL FILES (6,'SU',175,SWITCH)
	IF (SWITCH.NE.9) GOTO OPEN4
	CALL CLOSE2
	GOTO ABORT
OPEN4,
	XCALL OUTPT (0,0,0,'.',1)
	XCALL FILES (2,'I',02,SWITCH)
	IF (SWITCH.NE.9) GOTO OPEN5
	CALL CLOSE3
	GOTO ABORT
OPEN5,
	XCALL OUTPT (0,0,0,'.',1)
	XCALL FILES (1,'I',01,SWITCH)
	IF (SWITCH.NE.9) GOTO OPEN6
	CALL CLOSE4
	GOTO ABORT
OPEN6,
	XCALL OUTPT (0,0,0,'.',1)
	XCALL FILES (3,'U',60,SWITCH)
	IF (SWITCH.NE.9) GOTO OPEN7
	CALL CLOSE5
	GOTO ABORT
OPEN7,
	XCALL OUTPT (0,0,0,'.',1)
	XCALL FILES (7,'I',170,SWITCH)
	IF (SWITCH.NE.9) GOTO RDART
	CALL CLOSE6
	GOTO ABORT
RDART,
	LOKCTL = 1
	XCALL IO (7,ARTCTL,1,READ,LOKCTL)
	ORGART = ORG170
	CLOSE 7
	XCALL FFILE (170,ARTFIL,SWITCH)
OPEN8,
	XCALL OUTPT (0,0,0,'.',1)
	XCALL FILES (7,'I',171,SWITCH)
	IF (SWITCH.NE.9) GOTO RDSHT
	CALL CLOSE7
	GOTO ABORT
RDSHT,
	LOKCTL = 1
	XCALL IO (7,SHTCTL,1,READ,LOKCTL)
	ORGSHT = ORG171
	CLOSE 7
	XCALL FFILE (171,SHTFIL,SWITCH)
OPEN9,
	XCALL OUTPT (0,0,0,'.',1)
	XCALL FILES (7,'I',172,SWITCH)
	IF (SWITCH.NE.9) GOTO RDSHV
	CALL CLOSE8
	GOTO ABORT
RDSHV,
	LOKCTL = 1
	XCALL IO (7,SHVCTL,1,READ,LOKCTL)
	ORGSHV = ORG172
	CLOSE 7
	XCALL FFILE (172,SHVFIL,SWITCH)
OPEN10,
	XCALL OUTPT (0,0,0,'.',1)
	XCALL FFILE (174,FIL174,SWITCH)
	SWITCH = 6
	XCALL FILES (7,'I',174,SWITCH)
	IF (SWITCH.NE.9) GOTO OPEN11
	CALL CLOSE9
	GOTO ABORT
OPEN11,
	XCALL OUTPT (0,0,0,'.',1)
	SWITCH = 1
	XCALL FILES (9,'I',042,SWITCH)
	IF (SWITCH.NE.9) GOTO OPEN12
	CALL CLOSE10
	GOTO ABORT
OPEN12,
	XCALL OUTPT (0,0,0,'.',1)
	XCALL FILES (8,'I',041,SWITCH)
	IF (SWITCH.NE.9) GOTO RDHDR
	CALL CLOSE11
	GOTO ABORT
CLOSES,
	XCALL OUTPT (0,0,0,'.',1)
	XCALL FILES (8,'I',041,4)
CLOSE11,
	XCALL OUTPT (0,0,0,'.',1)
	XCALL FILES (9,'I',042,4)
CLOSE10,
	XCALL OUTPT (0,0,0,'.',1)
	XCALL FILES (7,'I',174,4)
CLOSE9,
	XCALL OUTPT (0,0,0,'.',1)
	XCALL FILES (7,'I',172,4)
CLOSE8,
	XCALL OUTPT (0,0,0,'.',1)
	XCALL FILES (7,'I',171,4)
CLOSE7,
	XCALL OUTPT (0,0,0,'.',1)
	XCALL FILES (7,'I',170,4)
CLOSE6,
	XCALL OUTPT (0,0,0,'.',1)
	XCALL FILES (3,'I',060,4)
CLOSE5,
	XCALL OUTPT (0,0,0,'.',1)
	XCALL FILES (1,'I',001,4)
CLOSE4,
	XCALL OUTPT (0,0,0,'.',1)
	XCALL FILES (2,'I',002,4)
CLOSE3,
	XCALL OUTPT (0,0,0,'.',1)
	XCALL FILES (6,'SU',175,4)
CLOSE2,
	XCALL OUTPT (0,0,0,'.',1)
	XCALL FILES (5,'SU',45,4)
CLOSE1,
	XCALL OUTPT (0,0,0,'.',1)
	XCALL FILES (4,'SU',44,4)
	RETURN
ENDOFF,
	XCALL OUTPT (2,1,1,'CLOSE FILES ',1)
	CALL CLOSES
ABORT,
	XCALL PGCHN ('CP:OEMNU',1)
RDHDR,
	LOKCTL = 1
	XCALL IO (3,COPCTL,1,READ,LOKCTL)
	UNLOCK 3
	LOKCTL = 1
	XCALL IO (1,CUSCTL,1,READ,LOKCTL)
	UNLOCK 1
	ORGCUS = ORG001
	LOKCTL = 1
	XCALL IO (8,ITMCTL,1,READ,LOKCTL)
	ORGITM = ORG041	
SCRN1,
	CTRLW =
	IF (INXCTL.EQ.1) CTRLW = 1
	CALL OE1
	ORDHDR =
OORDNO,
	CTL = '04,16,06,00,#X'
	CALL INPUT
	GO TO (SCRN1,ENDOFF), INXCTL
	ESTIMA =
	IF (INXCTL.EQ.3) 
	BEGIN
	  ESTIMA = 1
	  XCALL OUTPT (2,10,0,'*ADD ESTIMATE*',1)
	END
	TMPORD = ENTRY (1,6)
	IF (TMPORD.EQ.0.AND.ENTRY.NE.BLANKS) GO TO OORDNO
	IF (ENTRY.EQ.BLANKS)
	BEGIN
	  IF (CTRLW.EQ.0) 
	  BEGIN
	    LOKCTL = 1
	    XCALL IO (3,COPCTL,1,READ,LOKCTL)
	    IF (LSTORD.EQ.999999) LSTORD =
	    INCR LSTORD
	    LOKCTL = 1
	    XCALL IO (3,COPCTL,1,WRITE,LOKCTL)
	  END
	  TMPORD = LSTORD
	  ENTRY (1,6) = TMPORD, MASK
	  XCALL OUTPT (4,16,0,ENTRY(1,6),1)
	END
	OORDNO = TMPORD
	LOKCTL = 1
	XCALL ISIO (4,ORDHDR,OORDNO,READ,LOKCTL)
	IF (LOKCTL.EQ.0) GOTO DSPHDR
	SELECT = 1	;ADD MODE
	XCALL OUTPT (2,1,0,'ADD',1)
	OORDNO = TMPORD
OORDDT,
	CTL = '04,40,06,00,D '
	CALL INPUT
	GO TO (SCRN1), INXCTL
	OORDDT = ENTRY
	IF (ENTRY.EQ.BLANKS) OORDDT = TODAY
	DECMAL(1,6) = OORDDT
	CALL DSPDTE
	GO TO (ANYCN1), CNGCTL
OPROMD,
	CTL = '04,68,06,00,D '
	IF (ESTIMA) 
	BEGIN
	  XCALL OUTPT (4,53,0,'EST DEL DAYS   ',1)
	  TYPE = '# '
	END
	CALL INPUT
	GOTO (SCRN1), INXCTL
	OPROMD = ENTRY
	GOTO (ANYCN1), CNGCTL
OCUSNO,
	CTL = '06,16,06,01,# '
	CALL INPUT
	GO TO (SCRN1), INXCTL
	OCUSNO = ENTRY
	CALL GETCUS
	IF (SRCCTL) GOTO OCUSNO
	XCALL OUTPT (6,24,0,NAME,1)
	OCUSNM = NAME
	OCUSCD = CUSCD
	CTL = '06,68,06'			;;;
	DECMAL = CRDLMT				;;; ADDED DS 1/7/87
	CALL DSPNUM				;;;
	IF (CRDLMT.NE.0) 						;;;
&	  XCALL MESAG ('NOTE CREDIT CODE AND CHECK WITH DIANNA',2)	;;;
	GO TO (ANYCN1), CNGCTL
	ORDSEQ = 01
OSLMAN,
	CTL = '08,16,02,01,N '
	CALL INPUT
	GO TO (SCRN1), INXCTL
	OSLMAN = ENTRY
	IF (OSLMAN.LT.1.OR.OSLMAN.GT.12) GO TO OSLMAN
	GO TO (ANYCN1), CNGCTL
OLOC,
	CTL = '08,35,02,00,A '
	CALL INPUT
	GOTO (SCRN1), INXCTL
	IF (ESTIMA.AND.ENTRY(1,2).EQ.'  ') ENTRY(1,2) = 'E '
	IF (ENTRY(1,2).EQ.'  ') ENTRY(1,2) = 'O '
	OLOC = ENTRY(1,2)
	IF (OLOC.NE.'E'.AND.OLOC.NE.'O') GOTO OLOC
	XCALL OUTPT (ROW,COL,0,OLOC,1)
	GOTO (ANYCN1), CNGCTL
OSHVIA,
	XCALL OUTPT(9,53,0,'               ',1)
	CTL = '08,53,01,00,A '
	CALL INPUT
	GOTO (SCRN1), INXCTL
	IF (ENTRY.EQ.' ') CALL DEFLT1
	OSHVIA = ENTRY
	CALL GETSHV
	IF (SRCCTL) 
	BEGIN
	  XCALL MESAG ('SHIP-VIA CODE NOT FOUND',1)
	  GO TO OSHVIA
	END
	XCALL OUTPT (9,53,0,SHPVDS,1)	
	GO TO (ANYCN1), CNGCTL
OPONO,
	CTL = '08,69,10,00,A '
	CALL INPUT
	GOTO (SCRN1), INXCTL
	OPONO = ENTRY
	GOTO (ANYCN1), CNGCTL
ODISC,
	CTL = '10,16,02,00,# '
	CALL INPUT
	GOTO (SCRN1), INXCTL
	ODISC = ENTRY
	XCALL DSPLY (2,10,16,ODISC,1,1)
	XCALL OUTPT (10,18,0,'%',1)
	GOTO (ANYCN1), CNGCTL
OTERMS,
	XCALL OUTPT(11,33,0,'               ',1)
	CTL = '10,33,01,00,A '
	CALL INPUT
	GOTO (SCRN1), INXCTL
	OTERMS = ENTRY
	IF (OTERMS.EQ.' ') OTERMS = TERMS 	; DEFAULT TO CUSTOMERS TERMS
	XCALL OUTPT (10,33,0,OTERMS,1)
	CALL GETART
	IF (SRCCTL)
	BEGIN
	  XCALL MESAG ('TERM CODE NOT FOUND',1)
	  GO TO OTERMS
	END
	OTRMSD = ARTRDP
	XCALL OUTPT (11,33,0,ARTRDS,1)
	GOTO (ANYCN1), CNGCTL
OCLPPD,
	CTL = '10,53,01,00,A '
	CALL INPUT
	GO TO (SCRN1), INXCTL
	IF (ENTRY.EQ.' ') ENTRY = 'C'
	OCLPPD = ENTRY
	XCALL OUTPT (10,53,0,OCLPPD,1)
	IF (OCLPPD.NE.'C'.AND.OCLPPD.NE.'D'.AND.OCLPPD.NE.'P') GO TO OCLPPD
	GO TO (ANYCN1), CNGCTL
OJOBNO,
	CTL = '10,69,10,00,A '
	CALL INPUT
	GOTO (SCRN1), INXCTL
	OJOBNO = ENTRY
	GOTO (ANYCN1), CNGCTL
OSHPTO,
	XCALL OUTPT (13,12,1,'\',1)
	XCALL OUTPT (14,12,1,'\',1)
	XCALL OUTPT (15,12,1,'\',1)
	XCALL OUTPT (16,12,1,'\',1)
	CTL = '12,16,04,00,N '
	CALL INPUT
	GOTO (SCRN1), INXCTL
	OSHPTO = ENTRY
	IF (ENTRY.EQ.BLANKS) GOTO DFBLTO
	IF (OSHPTO.EQ.9999) GOTO SHIPNM
	CALL GETSHT
	IF (SRCCTL)
	BEGIN
	  XCALL MESAG('SHIP-TO NUMBER NOT FOUND',1)
	  GO TO OSHPTO
	END
	OSHPNM = SHTONA
	OSHAD1 = SHTOAD(1)
	OSHAD2 = SHTOAD(2)
	OSHAD3 = SHTOAD(3)
	CALL DSPSHP
	GO TO (ANYCN1), CNGCTL
	GO TO OCOMNT
DFBLTO,
	IF (OCUSNO.NE.CUSNO) CALL GETCUS
	OSHPNM = NAME
	OSHAD1 = ADD1
	OSHAD2 = ADD2
	OSHAD3(1,15) = CITY
	OSHAD3(17,18) = STATE
	OSHAD3(21,30) = ZIP
	CALL DSPSHP
	GO TO (ANYCN1), CNGCTL
	GO TO OCOMNT
DSPSHP,
	XCALL OUTPT (13,12,0,OSHPNM,1)
	XCALL OUTPT (14,12,0,OSHAD1,1)
	XCALL OUTPT (15,12,0,OSHAD2,1)
	XCALL OUTPT (16,12,0,OSHAD3,1)
	RETURN
SHIPNM,
	CTL = '13,12,30,00,A '
	CALL INPUT
	GO TO (SCRN1), INXCTL
	OSHPNM = ENTRY
	GO TO (ANYCN1), CNGCTL
SHIPA1,
	CTL = '14,12,30,00,A '
	CALL INPUT
	GO TO (SCRN1), INXCTL
	OSHAD1 = ENTRY
	GO TO (ANYCN1), CNGCTL
SHIPA2,
	CTL = '15,12,30,00,A '
	CALL INPUT
	GO TO (SCRN1), INXCTL
	OSHAD2 = ENTRY
	GO TO (ANYCN1), CNGCTL
SHIPA3,
	CTL = '16,12,30,00,A '
	CALL INPUT
	GO TO (SCRN1), INXCTL
	OSHAD3 = ENTRY
	GO TO (ANYCN1), CNGCTL
OCOMNT,
	CTL = '20,16,35,00,A '
	CALL INPUT
	GO TO (SCRN1), INXCTL
;;;	IF (ENTRY.EQ.BLANKS)			;<ENTER> FOR DEFAULT COMMENTS
	IF (ENTRY.EQ.BLANKS.AND.CNGCTL.EQ.0) 
	BEGIN
	  OCOMNT(1) = ORDCOM(1)
	  OCOMNT(2) = ORDCOM(2)
	  GOTO DSPCOM
	END
;;;	IF (ENTRY.EQ.'0')			;USE 0 TO WIPE OUT COMMENTS
	IF (ENTRY.EQ.BLANKS.AND.CNGCTL.EQ.1) 
	BEGIN
	  OCOMNT(1) =
	  OCOMNT(2) =
	  GOTO DSPCOM
	END
	OCOMNT(1) = ENTRY
	ROW = 22
	CALL INPUT
	GO TO (SCRN1), INXCTL
	OCOMNT(2) = ENTRY
DSPCOM,
	XCALL OUTPT (20,16,0,OCOMNT(1),1)
	XCALL OUTPT (22,16,0,OCOMNT(2),1)
	GOTO (ANYCN1), CNGCTL
DEFACT,
	OARACT = DEFARA
	ALPHA(1,8) = OARACT, ACMASK
	XCALL OUTPT (22,72,0,ALPHA(1,8),1)
	GOTO ANYCN1
OARACT,
	XCALL GETAC (22,73,OARACT,INXCTL,1)
	GO TO (SCRN1), INXCTL
	IF (OARACT.EQ.0)GOTO DEFACT
	GOTO ANYCN1
DSPHDR,
	SELECT = 2
	XCALL OUTPT (2,1,0,'CHANGE',1)
	XCALL OUTPT (4,3,0,'*',1)
	XCALL OUTPT (6,3,0,'*',1)
	CTL = '04,40'
	DECMAL(1,6) = OORDDT
	CALL DSPDTE
	CTL = '04,68'
	IF (OLOC.EQ.'E')  
	THEN BEGIN
	  XCALL OUTPT (4,53,0,'EST DEL DAYS   ',1)
	  DECMAL = OPROMD
	  CALL DSPNUM
	END
	ELSE BEGIN
	  DECMAL(1,6) = OPROMD
	  CALL DSPDTE
	END
	CTL = '06,16,06'
	DECMAL = OCUSNO
	CALL DSPNUM
	XCALL OUTPT (6,24,0,OCUSNM,1)
	CTL = '08,16,02'
	DECMAL = OSLMAN
	CALL DSPNUM
	XCALL OUTPT (8,35,0,OLOC,1)
	CALL GETSHV
	XCALL OUTPT (8,53,0,OSHVIA,1)
	XCALL OUTPT (9,53,0,SHPVDS,1)
	XCALL OUTPT (8,69,0,OPONO,1)
	CTL = '10,16,02'
	DECMAL = ODISC
	CALL DSPNUM
	XCALL OUTPT (10,18,0,'%',1)
	CALL GETART
	XCALL OUTPT (10,33,0,OTERMS,1)
	XCALL OUTPT (11,33,0,ARTRDS,1)
	XCALL OUTPT (10,53,0,OCLPPD,1)
	XCALL OUTPT (10,69,0,OJOBNO,1)
	ALPHA (1,4) = OSHPTO,'ZZZZ'
	XCALL OUTPT (12,16,0,ALPHA(1,4),1)
	CALL DSPSHP
	XCALL OUTPT (20,16,0,OCOMNT(1),1)
	XCALL OUTPT (22,16,0,OCOMNT(2),1)
	IF (DSTFLG.NE.'Y') RETURN
	ALPHA(1,8) = OARACT, ACMASK
	XCALL OUTPT (22,73,0,ALPHA(1,8),1)
	GOTO ANYCN1
CNGBR1,
	GOTO (BADCN1,OORDDT,OPROMD,OCUSNO,OSLMAN,OLOC,OSHVIA,OPONO,ODISC,OTERMS,
&	      OCLPPD,OJOBNO,OSHPTO,SHIPNM,SHIPA1,SHIPA2,SHIPA3,
&	      OCOMNT,OARACT), WHATNO
BADCN1,
	CNGCTL = 3
ANYCN1,
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (ENDHDR,CNGBR1,SCRN1), CNGCTL + 1
	GOTO BADCN1
ENDHDR,
	GOTO (ADDHDR,CNGHDR), SELECT
	XCALL MESAG ('INVALID SELECT FLAG',1)
	GOTO ENDHDR
ADDHDR,
	OFLAG =
	OORDNO = TMPORD
	LOKCTL = 1
	XCALL ISIO (4,ORDHDR,OORDNO,STORE,LOKCTL)
	IF (LOKCTL.EQ.4) XCALL MESAG('**CANNOT ADD RECORD - DUPLICATE ORDER NUMBER',1)
	IF (LOKCTL.EQ.5) XCALL MESAG('**CANNOT ADD RECORD - ORDHDR POSSIBLY FULL',1)
	IF (LOKCTL.NE.0) GOTO SCRN1
	GOTO SCRN2
CNGHDR,
	LOKCTL = 1
	XCALL IO (4,ORDHDR,OORDNO,WRITE,LOKCTL)

SCRN2,
	CALL OE2
	ROW = 4
ASKCNG,
	ORDLIN =
	CNGKEY =
	RUNTOT =
	XCALL OUTPT (24,1,2,'SELECT: [7m<1> ADD[0m  [7m<2> SCAN[0m  ',1)
	XCALL OUTPT (0,0,0,'[7m<3> CNG SPECIFIC LINE[0m   <2> ',1)
	XCALL INPUT (24,71,01,00,'#E',ENTRY,INXCTL,1)
	GOTO (ASKCNG,SCRN3), INXCTL
	SELECT = ENTRY
	IF (SELECT.EQ.0) SELECT = 2
	IF (SELECT.LT.1.OR.SELECT.GT.3) GOTO ASKCNG
NXTLIN,
	ROW = ROW + 2
	ROW2 = ROW + 1
	IF (ROW.GE.21) 
	BEGIN
	  DISPLAY (15,27,'[06;22r',27,'[22;01H',10,10,27,'[01;24r')
	  ROW = 20
	  ROW2 = 21
	END

	IF (SELECT.EQ.1) XCALL OUTPT (2,1,0,'ADD    ',1)

	IF (SELECT.EQ.2)
	BEGIN
	  XCALL OUTPT (2,1,0,'SCAN   ',1)
	  CALL GETLIN
	  IF (LOKCTL.NE.0.OR.LORDNO.NE.OORDNO) 
	  BEGIN
	    XCALL MESAG ('NO MORE LINE ITEMS FOUND',2)
	    GOTO ASKCNG
	  END
	  SAVKEY = ORDKEY
	  GOTO DSPLIN
	END

	IF (SELECT.EQ.3) XCALL OUTPT (2,1,0,'CHANGE ',1)

	GOTO LITMNO
FNDLIN,
	CALL GETLIN
	IF (LOKCTL.NE.0.OR.LORDNO.NE.OORDNO) 
	BEGIN
	  XCALL MESAG ('NO MORE LINE ITEMS FOUND',2)
	  GOTO ASKCNG
	END
	IF (LITMNO.NE.ENTRY) GOTO FNDLIN
	SAVKEY = ORDKEY
	GOTO DSPLIN
GETLIN,
	IF (LORDNO.EQ.0)
	THEN BEGIN
	  LORDNO = OORDNO
	  LOKCTL = 1
	  XCALL ISIO (5,ORDLIN,LORDNO,READ,LOKCTL)
	END
	ELSE BEGIN
	  LOKCTL = 1
	  XCALL IOS (5,ORDLIN,READ,LOKCTL)
	END
	RETURN
ABOLIN,
	IF (CNGCTL.OR.SELECT.EQ.2) GOTO DSPLIN
	XCALL OUTPT (ROW,1,1,'\',1)
	XCALL OUTPT (ROW2,1,1,'\',1)
	ORDLIN =
LITMNO,
	DASH=
	INCH =
	CTL (4,14) = '01,15,00,AE'
	IF (CNGCTL.OR.SELECT.EQ.2)
	BEGIN
	  CALL ACCEPT
	  IF (TCHAR.EQ.13) GOTO LDESCR	;RETURN TYPED -- ITEM & DESCRIPTION OK
	  IF (TCHAR.EQ.23) GOTO ABOLIN	;<CTRLW> TYPED -- START LINE OVER
	  IF (TCHAR.NE.9.AND.TCHAR.NE.21) GOTO LITMNO
	END
	CALL INPUT
	GO TO (ABOLIN,ASKCNG), INXCTL
	IF (ENTRY.EQ.BLANKS)
	BEGIN
	  ENTRY = SAVITM
	  XCALL OUTPT (ROW,1,0,SAVITM,1)
	END
	LITMNO = ENTRY
	IF (LITMNO.EQ.BLANKS) GO TO LITMNO
	IF (LITMNO.EQ.'M              ') GOTO LDESCR	;;;
;;;
;	ADDED FOR R-ANGLE PROCESSING	
;;;
	IF (LITMNO.EQ.'WR') 
	BEGIN
	  WRANGL = LITMNO(4,15)
	  XCALL INSTR (1,WRANGL,'-',DASH)
	  XCALL INSTR (1,WRANGL,',',INCH)

	  IF ((DASH.EQ.0.AND.INCH.EQ.0).OR.(DASH.NE.0.AND.INCH.NE.0).OR.
&		(WRANGL(8,12).NE.'     ') )
	  BEGIN
BADWRN,
	    XCALL MESAG ('INVALID R-ANGLE PART NUMBER',1)
	    GOTO LITMNO
	  END
	  LITMNO(4,15) = 

	END

	IF (SELECT.EQ.3) GOTO FNDLIN

	CALL GETITM
	IF (SRCCTL) GOTO LITMNO

	LITMNO = ITEMNO
	SAVITM = ITEMNO

	XCALL OUTPT (ROW,COL,0,ITEMNO,1)
	IF (LITMNO.EQ.'???') GO TO LDESCR

	LCOST = AVGCST#1
	LUOFM = SUOFM
	LDESCR = DESCR
	IF (DASH.OR.INCH) LDESCR(1,8) = WRANGL(1,7)		;;;
	IF (DASH) LDESCR(DASH,DASH) = '/'		;;;
	IF (INCH) LDESCR(INCH,INCH) = '"'		;;;

LDESCR,
	CTL (4,14) = '03,30,01,A '
	IF (CNGCTL.OR.(SELECT.EQ.1.AND.(LITMNO.NE.'M'.AND.LITMNO.NE.'???')))
	BEGIN
	  XCALL OUTPT (ROW2,3,0,LDESCR,1)
	  CALL ACCEPT2
	  IF (TCHAR.EQ.13) GOTO LQTYOR	;RETURN TYPED -- ITEM & DESCRIPTION OK
	  IF (TCHAR.EQ.23) GOTO ABOLIN	;<CTRLW> TYPED -- START LINE OVER
	  IF (TCHAR.NE.9.AND.TCHAR.NE.21) GOTO LDESCR
	END
	CALL INPUT2
	GOTO (ABOLIN), INXCTL
	LDESCR = ENTRY
	IF (LITMNO.EQ.'M              ')
	BEGIN
	  LQTYOR = 1
	  LPRICE =
	  LUOFM = 
	  LDISC = 
	  LCOST =
	  GOTO ANYCN2
	END
LQTYOR,
	CTL (4,14) = '44,05,00,#-'		;;;ALLOW NEGATIVE QUANTITY
	IF (CNGCTL)
	BEGIN
	  CALL ACCEPT
	  IF (TCHAR.EQ.13) GOTO LPRICE	;<CR>
	  IF (TCHAR.EQ.23) GOTO ABOLIN	;<CTRLW> TYPED -- START LINE OVER
	  IF (TCHAR.NE.9.AND.TCHAR.NE.21) GOTO LQTYOR
	END
	CALL INPUT
	GOTO (ABOLIN), INXCTL
	IF (ENTRY.EQ.BLANKS) CALL DEFLT1
	LQTYOR = ENTRY
LPRICE,
	IF (SELECT.EQ.1)
	BEGIN
	;;;
	;	ADDED FROM R-ANGLE PROCESSING
	;;;
	  LPRICE = PRICE (1)
	  IF (DASH)
	  BEGIN
	    ONERROR BADWRN
	    DSIZ = WRANGL(1,DASH-1)
	    DECMAL = WRANGL(DASH+1,DASH+3)
	    OFFERROR
	    DSIZ = DSIZ + DECMAL
	    WTPIN = ((WEIGHT*1000)/120)
	    DPND = (WTPIN * DSIZ)#3
	    PRPPN = ((PRICE(1)*1000)/WEIGHT)
	    LPRICE = (PRPPN * DPND)#3
	  END
	  IF (INCH)
	  BEGIN
	    DSIZ = WRANGL(1,INCH-1)
	    WTPIN = ((WEIGHT*10000)/120)/2
	    DPND = (WTPIN * DSIZ)#3
	    PRPPN = ((PRICE(1)*1000)/WEIGHT)
	    LPRICE = (PRPPN * DPND)#4
	  END
;
;;;
;
	  CTL (4,8) = '56,08'
	  DECMAL = LPRICE
	  CALL DSP3DP		;;;
	END
	CTL (4,14) = '56,08,01,#N'		;;;
	IF (CNGCTL.OR.(SELECT.EQ.1.AND.LITMNO.NE.'???'))
	BEGIN
	  CALL ACCEPT
	  IF (TCHAR.EQ.13) GOTO LINSEQ	;<CR>
	  IF (TCHAR.EQ.23) GOTO ABOLIN	;<CTRLW> TYPED -- START LINE OVER
	  IF (TCHAR.NE.9.AND.TCHAR.NE.21) GOTO LQTYOR
	END
	CALL INPUT
	DECMAL = ENTRY				;;;
	CALL DSP3DP				;;;
	GO TO (ABOLIN), INXCTL
	LPRICE = ENTRY
	IF (LITMNO.NE.'???') GOTO LINSEQ
	XCALL OUTPT (ROW2,45,0,'UNIT OF MEASURE:',1)
	CTL (4,14) = '62,02,00,A '		;;;
	CALL INPUT2
	GOTO (ABOLIN), INXCTL
	IF (ENTRY.EQ.'  ')			;;;
	BEGIN					;;;
	  ENTRY(1,2) = 'EA'			;;;
	  XCALL OUTPT (ROW2,COL,0,ENTRY(1,2),1)	;;;
	END					;;;
	LUOFM = ENTRY				;;;
LINSEQ,
	CTL (4,14) = '67,03,00,# '
	IF (SELECT.EQ.1)
	BEGIN
	  LINSEQ = ORDSEQ + 1
	  DECMAL = LINSEQ
	  CALL DSPNUM
	END
	IF (CNGCTL.OR.SELECT.EQ.1)
	BEGIN
	  CALL ACCEPT
	  IF (TCHAR.EQ.13) GOTO EXTPRC	;<CR>
	  IF (TCHAR.EQ.23) GOTO ABOLIN	;<CTRLW> TYPED -- START LINE OVER
	  IF (TCHAR.NE.9.AND.TCHAR.NE.21) GOTO LQTYOR
	END
	CALL INPUT
	GOTO (ABOLIN), INXCTL
	LINSEQ = ENTRY
	IF (SELECT.EQ.2) CNGKEY = 1
	GOTO EXTPRC
DSPLIN,
	XCALL OUTPT (ROW,01,0,LITMNO,1)
	XCALL OUTPT (ROW2,03,0,LDESCR,1)
	CTL (4,14) = '44,05,00,#-'		;;;ALLOW NEGATIVE QUANTITY
	DECMAL = LQTYOR
	CALL DSPNUM
	CTL (4,14) = '56,08,01,# '		;;;
	DECMAL = LPRICE
	CALL DSP3DP
	CTL (4,14) = '67,03,00,# '
	DECMAL = LINSEQ
	CALL DSPNUM
EXTPRC,
	EXPRCE = ((LQTYOR)*LPRICE)#1				;;;
	IF (EXPRCE.GE.100000000.OR.(RUNTOT+EXPRCE).GE.100000000) GO TO TOOBIG
	ALPHA(1,10) = EXPRCE,DLRMSK
	XCALL OUTPT (ROW2,70,0,ALPHA(1,10),1)
ANYCN2,
	CNGCTL = 4
	XCALL ANYCN(CNGCTL,WHATNO)
	IF (CNGCTL.EQ.-1) GOTO ASKCNG
	IF (SELECT.EQ.1.AND.CNGCTL) GOTO LITMNO
	IF ((SELECT.EQ.2.OR.SELECT.EQ.3).AND.CNGCTL)
	BEGIN
	  RUNTOT = RUNTOT - EXPRCE
	  GOTO LITMNO
	END
RUNTOT,
	RUNTOT = RUNTOT + EXPRCE
	XCALL OUTPT (23,55,0,'RUNNING TOTAL:',1)
	ALPHA(1,11) = RUNTOT,DLRMSK
	XCALL OUTPT (0,0,0,ALPHA(1,11),1)
ENDLIN,
	GOTO (ADDLIN,CNGLIN,CNGLIN), SELECT
	XCALL MESAG ('INVALID SELECT FLAG',1)
	GOTO ENDLIN
ADDLIN,
	LFLAG =
	LORDNO = OORDNO
	LOKCTL = 1
	XCALL ISIO (5,ORDLIN,ORDKEY,STORE,LOKCTL)
	IF (LOKCTL.EQ.4) XCALL MESAG('**CANNOT ADD RECORD - DUPLICATE KEY',1)
	IF (LOKCTL.EQ.5) XCALL MESAG('**CANNOT ADD RECORD - ORDLIN POSSIBLY FULL',1)
	IF (LOKCTL.NE.0) GOTO ABOLIN
	ORDSEQ = LINSEQ
	GOTO NXTLIN
CNGLIN,
	IF (CNGKEY)
	THEN BEGIN
	  DECMAL = ORDKEY
	  ORDKEY = SAVKEY,MASK
	  LOKCTL = 1
	  XCALL ISIO (5,ORDLIN,ORDKEY,DELETE,LOKCTL)
	  ORDKEY = DECMAL,MASK
	  LOKCTL = 1
	  XCALL ISIO (5,ORDLIN,ORDKEY,STORE,LOKCTL)
	  CNGKEY =
	END
	ELSE BEGIN
	  LOKCTL = 1
	  XCALL IO (5,ORDLIN,ORDKEY,WRITE,LOKCTL)
	END
	IF (SELECT.EQ.3) GOTO FNDLIN
	GOTO NXTLIN

SCRN3,
	CALL OE3
	ROW = 3
DASKCNG,
	DUCACC =
	CNGKEY =
	RUNTOT =
	XCALL OUTPT (24,1,2,'SELECT: [7m<1> ADD[0m  [7m<2> SCAN[0m  ',1)
	XCALL OUTPT (0,0,0,'[7m<3> CNG SPECIFIC LINE[0m   <2> ',1)
	XCALL INPUT (24,71,01,00,'#E',ENTRY,INXCTL,1)
	GOTO (DASKCNG,SCRN4), INXCTL
	SELECT = ENTRY
	IF (SELECT.EQ.0) SELECT = 2
	IF (SELECT.LT.1.OR.SELECT.GT.3) GOTO DASKCNG
	IF (SELECT.EQ.3)
	BEGIN
	  ROW = 3
	  XCALL OUTPT (6,1,2,'\',1)
	  CNGCTL =
	  GOTO DUTYPE
	END
NXTDUC,
	ROW = ROW + 3
	ROW2 = ROW + 1
	ROW3 = ROW + 2
	IF (ROW.GE.22) 
	BEGIN
	  DISPLAY (15,27,'[06;22r',27,'[23;01H',10,10,10,27,'[01;24r')
	  ROW = 20
	  ROW2 = 21
	  ROW3 = 22
	END

	IF (SELECT.EQ.1) XCALL OUTPT (2,1,0,'ADD    ',1)

	IF (SELECT.EQ.2)
	BEGIN
	  XCALL OUTPT (2,1,0,'SCAN   ',1)
	  CALL GETDUC
	  IF (LOKCTL.NE.0.OR.DUCTOR.NE.OORDNO) 
	  BEGIN
	    XCALL MESAG ('NO MORE DUCT ITEMS FOUND',2)
	    GOTO DASKCNG
	  END
	  SAVKEY = KEY175
	  GOTO DSPDUC
	END

	IF (SELECT.EQ.3) XCALL OUTPT (2,1,0,'CHANGE ',1)

	GOTO DUTYPE
FNDDUC,
	CALL GETDUC
	IF (LOKCTL.NE.0.OR.DUCTOR.NE.OORDNO) 
	BEGIN
	  XCALL MESAG ('NO MORE DUCT ITEMS FOUND',2)
	  GOTO DASKCNG
	END
	IF (DUCTOR.NE.OORDNO) GOTO FNDDUC
	SAVKEY = KEY175
	GOTO DSPDUC
GETDUC,
	IF (DUCTOR.EQ.0)
	THEN BEGIN
	  DUCTOR = OORDNO
	  LOKCTL = 1
	  XCALL ISIO (6,DUCACC,KEY175,READ,LOKCTL)
	END
	ELSE BEGIN
	  LOKCTL = 1
	  XCALL IOS (6,DUCACC,READ,LOKCTL)
	END
	RETURN
ABODUC,
	INXCTL =
	IF (CNGCTL) GOTO ANYCN3
	DUCACC =

DUTYPE,
	CTL(4,14) = '01,01,00,NE'
	IF (CNGCTL)
	BEGIN
	  CALL ACCEPT
	  IF (TCHAR.EQ.13) GOTO CAT	;<CR>
	  IF (TCHAR.EQ.23) GOTO ABODUC	;<CTRLW> TYPED -- START LINE OVER
	  IF (TCHAR.NE.9.AND.TCHAR.NE.21) GOTO DUTYPE
	END
	FOR I = 1 STEP 1 UNTIL 4 
	  DO XCALL OUTPT (ROW+I+2,COL,0,DTYPE(I),1)
	CALL INPUT
	GOTO (ABODUC, ENDDUC), INXCTL
	DUTYPE = ENTRY
	IF (DUTYPE.EQ.0) DUTYPE = 1
	IF (DUTYPE.LT.1.OR.DUTYPE.GT.4) GOTO DUTYPE
	XCALL OUTPT (ROW,COL,0,DTYPE(DUTYPE),1)
	FOR I = 1 STEP 1 UNTIL 4 
	  DO XCALL OUTPT (ROW+I+2,COL,1,'\',1)
	GOTO (ANYCN3), CNGCTL
	IF (SELECT.EQ.3) GOTO STY
CAT,
	CTL(4,14) = '06,01,00,NN'
	IF (CNGCTL)
	BEGIN
	  CALL ACCEPT
	  IF (TCHAR.EQ.13) GOTO STY	;<CR>
	  IF (TCHAR.EQ.23) GOTO ABODUC	;<CTRLW> TYPED -- START LINE OVER
	  IF (TCHAR.NE.9.AND.TCHAR.NE.21) GOTO CAT
	END
	FOR I = 1 STEP 1 UNTIL 4 
	  DO XCALL OUTPT (ROW+I+2,COL,0,DCAT(I),1)
	CALL INPUT
	GOTO (ABODUC), INXCTL
	CAT = ENTRY
	IF (CAT.EQ.0) CAT = 1
	IF (CAT.LT.1.OR.CAT.GT.4) GOTO CAT
	XCALL OUTPT (ROW,COL,0,DCAT(CAT),1)
	FOR I = 1 STEP 1 UNTIL 4 
	  DO XCALL OUTPT (ROW+I+2,COL,1,'\',1)
	GOTO (ANYCN3), CNGCTL
STY,
	CTL(4,14) = '13,01,00,NN'
	IF (CNGCTL)
	BEGIN
	  CALL ACCEPT
	  IF (TCHAR.EQ.13) GOTO SEAM	;<CR>
	  IF (TCHAR.EQ.23) GOTO ABODUC	;<CTRLW> TYPED -- START LINE OVER
	  IF (TCHAR.NE.9.AND.TCHAR.NE.21) GOTO STY
	END
	FOR I = 1 STEP 1 UNTIL 5
	  DO XCALL OUTPT (ROW+I+2,COL,0,DSTY(I),1)
	CALL INPUT
	GOTO (ABODUC), INXCTL
	STY = ENTRY
	IF (STY.EQ.0) STY = 1
	IF (STY.LT.1.OR.STY.GT.4) GOTO STY
	XCALL OUTPT (ROW,COL,0,DSTY(STY),1)
	FOR I = 1 STEP 1 UNTIL 5 
	  DO XCALL OUTPT (ROW+I+2,COL,1,'\',1)
	GOTO (ANYCN3), CNGCTL
	IF (SELECT.EQ.3) GOTO LINER
SEAM,
	CTL(4,14) = '18,01,00,NN'
	IF (CNGCTL)
	BEGIN
	  CALL ACCEPT
	  IF (TCHAR.EQ.13) GOTO GAUGE	;<CR>
	  IF (TCHAR.EQ.23) GOTO ABODUC	;<CTRLW> TYPED -- START LINE OVER
	  IF (TCHAR.NE.9.AND.TCHAR.NE.21) GOTO SEAM
	END
	FOR I = 1 STEP 1 UNTIL 2
	  DO XCALL OUTPT (ROW+I+2,COL,0,DSEAM(I),1)
	CALL INPUT
	GOTO (ABODUC), INXCTL
	SEAM = ENTRY
	IF (SEAM.EQ.0) SEAM = 1
	IF (SEAM.LT.1.OR.SEAM.GT.2) GOTO SEAM
	XCALL OUTPT (ROW,COL,0,DSEAM(SEAM),1)
	FOR I = 1 STEP 1 UNTIL 2
	  DO XCALL OUTPT (ROW+I+2,COL,1,'\',1)
	GOTO (ANYCN3), CNGCTL
	IF (SELECT.EQ.3) GOTO SEAL

SEAL,
	CTL(4,14) = '23,01,00,NN'
	IF (CNGCTL)
	BEGIN
	  CALL ACCEPT
	  IF (TCHAR.EQ.13) GOTO JOINT	;<CR>
	  IF (TCHAR.EQ.23) GOTO ABODUC	;<CTRLW> TYPED -- START LINE OVER
	  IF (TCHAR.NE.9.AND.TCHAR.NE.21) GOTO SEAL
	END
	FOR I = 1 STEP 1 UNTIL 2
	  DO XCALL OUTPT (ROW+I+2,COL,0,DSEAL(I),1)
	CALL INPUT
	GOTO (ABODUC), INXCTL
	SEAL = ENTRY
	IF (SEAL.EQ.0) SEAL = 1
	IF (SEAL.LT.1.OR.SEAL.GT.2) GOTO SEAL
	XCALL OUTPT (ROW,COL,0,DSEAL(SEAL),1)
	FOR I = 1 STEP 1 UNTIL 2
	  DO XCALL OUTPT (ROW+I+2,COL,1,'\',1)
	GOTO (ANYCN3), CNGCTL
	IF (SELECT.EQ.3) GOTO GAUGE
JOINT,
	CTL(4,14) = '30,06,00,N-'
	IF (CNGCTL)
	BEGIN
	  CALL ACCEPT
	  IF (TCHAR.EQ.13) GOTO SIZE1	;<CR>
	  IF (TCHAR.EQ.23) GOTO ABODUC	;<CTRLW> TYPED -- START LINE OVER
	  IF (TCHAR.NE.9.AND.TCHAR.NE.21) GOTO JOINT
	END
	CALL INPUT
	GOTO (ABODUC), INXCTL
	JOINT = ENTRY
	IF (JOINT.EQ.0) GOTO JOINT
	ALPHA(1,6) = JOINT,NUMASK
	XCALL OUTPT (ROW,COL,0,ALPHA(1,6),1)
	GOTO (CALDUC), CNGCTL

SIZE1,
	CTL(4,14) = '37,03,00,N '
	IF (CNGCTL)
	BEGIN
	  CALL ACCEPT
	  IF (TCHAR.EQ.13) GOTO SIZE2	;<CR>
	  IF (TCHAR.EQ.23) GOTO ABODUC	;<CTRLW> TYPED -- START LINE OVER
	  IF (TCHAR.NE.9.AND.TCHAR.NE.21) GOTO SIZE1
	END
	CALL INPUT
	GOTO (ABODUC), INXCTL
	SIZE1 = ENTRY
	IF (SIZE1.LE.0) GOTO SIZE1
	ENTRY(1,5) = SIZE1,'ZZZ x'
	XCALL OUTPT (ROW,COL,0,ENTRY(1,5),1)
	IF (SELECT.EQ.3) GOTO FNDDUC

SIZE2,
	CTL(4,14) = '42,02,00,N '
	IF (CNGCTL)
	BEGIN
	  CALL ACCEPT
	  IF (TCHAR.EQ.13) GOTO SIZE3	;<CR>
	  IF (TCHAR.EQ.23) GOTO ABODUC	;<CTRLW> TYPED -- START LINE OVER
	  IF (TCHAR.NE.9.AND.TCHAR.NE.21) GOTO SIZE1
	END
	CALL INPUT
	GOTO (SIZE1), INXCTL
	SIZE2 = ENTRY
	IF (SIZE2.LE.0) GOTO SIZE2
	ENTRY(1,4) = SIZE2,'ZZ x'
	XCALL OUTPT (ROW,COL,0,ENTRY(1,4),1)

SIZE3,
	CTL(4,14) = '46,01,00,N '
	IF (CNGCTL)
	BEGIN
	  CALL ACCEPT
	  IF (TCHAR.EQ.13) GOTO GAUGE	;<CR>
	  IF (TCHAR.EQ.23) GOTO ABODUC	;<CTRLW> TYPED -- START LINE OVER
	  IF (TCHAR.NE.9.AND.TCHAR.NE.21) GOTO SIZE1
	END
	CALL INPUT
	GOTO (SIZE1), INXCTL
	SIZE3 = ENTRY
	IF (SIZE3.LE.0) GOTO SIZE3
	IF (SIZE3.NE.4.AND.SIZE3.NE.5) GOTO SIZE3	;4 or 5 feet only
	IF (SELECT.EQ.3) GOTO SIZE1

	GOTO (CALDUC), CNGCTL	; If the size of the thing has changed, 
				; must recalc the square feet, and pounds.

GAUGE,
	GAUGE = 
	THICK =
	IF (DUTYPE.NE.2.AND.DUTYPE.NE.3)
	BEGIN
	  CTL(4,14) = '50,02,00,N '
	  IF (CNGCTL)
	  BEGIN
	    CALL ACCEPT
	    IF (TCHAR.EQ.13) GOTO CALDUC	;<CR>
	    IF (TCHAR.EQ.23) GOTO ABODUC	;<CTRLW> TYPED -- START LINE OVER
	    IF (TCHAR.NE.9.AND.TCHAR.NE.21) GOTO SIZE1
	  END
	  XCALL OUTPT (ROW,57,0,DGAGE,1)
	  CALL INPUT
	  GOTO (ABODUC), INXCTL
	  GAUGE = ENTRY
	  IF (GAUGE.EQ.0) GAUGE = 26
	  IF (	GAUGE.NE.26.AND.
&		GAUGE.NE.24.AND.
&		GAUGE.NE.22.AND.
&		GAUGE.NE.20.AND.
&		GAUGE.NE.18		) GOTO GAUGE
	  ALPHA =
	  ALPHA (1,2) = GAUGE,MASK
	  ALPHA (3,5) = ' GA'
	  XCALL OUTPT (ROW,COL,0,ALPHA(1,5),1)
	  XCALL OUTPT (ROW,57,1,'\',1)
	END

	IF (DUTYPE.EQ.2.OR.DUTYPE.EQ.3)
	BEGIN
	  CTL(4,14) = '50,03,00,N '
	  XCALL OUTPT (ROW,57,0,DTHICK(DUTYPE-1),V)
	  CALL INPUT
	  GOTO (ABODUC), INXCTL
	  THICK = ENTRY
	  IF (THICK.EQ.0) THICK = 024

	  IF (DUTYPE.EQ.2) CASE THICK OF
	  BEGINCASE
	  024:	GAUGE = 24	;ALUMINUM
	  032:	GAUGE = 22	;ALUMINUM
	  040:	GAUGE = 20	;ALUMINUM
	  050:	GAUGE = 18	;ALUMINUM
	  ENDCASE ELSE GOTO TGAQTY

	  IF (DUTYPE.EQ.3) CASE THICK OF
	  BEGINCASE
	  024:	GAUGE = 24	;STAINLESS
	  030:	GAUGE = 22	;STAINLESS
	  036:	GAUGE = 20	;STAINLESS
	  ENDCASE ELSE GOTO TGAQTY

	  ALPHA =
	  ALPHA (1,4) = THICK,'.XXX'
	  ALPHA (5,5) = '"'
	  XCALL OUTPT (ROW,COL,0,ALPHA(1,5),1)
	  XCALL OUTPT (ROW,57,1,'\',V)
	END
	IF (SELECT.EQ.3) GOTO SIZE3

CALDUC,
		; Get the parameter information for that gauge
	OPEN (7,I,FIL174)
	LOKCTL = 1
	XCALL IO (7,DUCFIL,GAUGE,READ,LOKCTL)
	CLOSE 7	

		; Calculate the square feet
	DEC1 =
	DEC2 =
	DEC3 =
	DEC4 =
	SQFEET =
	DEC4 = SIZE3 * 12
		; Get the length in inches

	DEC1 = ( ( SIZE1 * DEC4 ) * 2 )
		; DEC1 = square feet of 2 slip sides in inches

	DEC2 = ( ( SIZE2 * DEC4 ) * 2 )
		; DEC2 = Square feet of 2 drive sides in inches

	DEC3 = ( DEC1 + DEC2 ) * JOINT
		; Total square feet, is slip sides, plus drive sides
		; times the number of joints

	SQFEET = ( ( DEC3 * 10 ) / 144 ) #1
		; Convert to square feet

;;;
;;; DONT DISPLAY DUCT SQ FT
;;;
;	ALPHA =
;	ALPHA(1,7) = SQFEET,NUMASK
;	ALPHA(10,14) =  'SQ FT'
;	XCALL OUTPT (ROW3,29,0,ALPHA(1,14),1)

		;  Calculate the pounds of sheet metal, seam allowance, 
		;  and waste factor.
	DEC1 = 
	DEC2 =
	DEC3 =
	POUNDS =

	DEC1 = ( DUCLBS * SQFEET )
		;  Calculate the total actual number of pounds

	DEC3 = ( DUCSEA * ( SIZE3 * JOINT ) )
	IF ((SIZE1+SIZE2).GE.120) DEC3 = ( ( DUCSEA * 2 )*( SIZE3 * JOINT ) )
		; Calculate the seam allowance, by the foot, from total length
		; If size1+size2 .ge.120 then add seam allow twice

	DEC2 = ( DUCWAS * (DEC1+DEC3) ) #5
		; Calculate the total waste pounds, based on above acutal #
		; Round back 5 digts cuz of decimal places.
		; Changed to figure waste last cuz waste was not figured on
		; seam allowance and it should be

	POUNDS = ( DEC1 + DEC3 + DEC2 ) #3
		; The total pounds, is the actual number of pounds
		; plus the seam allowance
		; plus the waste
	IF (DUTYPE.EQ.2) POUNDS = ( ( DEC1 + DEC3 + DEC2 ) / 3 ) #3
		; Aluminum pounds is 1/3 galvanized

	ALPHA =
	ALPHA(1,7) = POUNDS,NUMASK
	ALPHA(9,11) = 'LBS'
	XCALL OUTPT (ROW2,29,0,ALPHA(1,11),1)
	ALPHA (1,11) = GPRICE,D3PMSK
	XCALL OUTPT (ROW2,56,0,ALPHA(1,11),1)
	XCALL OUTPT (ROW2,68,0,'LB',1)
	ALPHA(1,10) = (POUNDS * GPRICE)#1,DLRMSK
	XCALL OUTPT (ROW2,71,0,ALPHA(1,10),1)

	IF (CNGCTL) CALL CALLIN			; Recalc liner if changes

	GOTO (ANYCN3), CNGCTL

LOCAT,
	XCALL OUTPT (ROW2,6,0,'LOCAT:',1)
	CTL(4,14) = '13,15,00,A '
	IF (CNGCTL)
	BEGIN
	  CALL ACCEPT2
	  IF (TCHAR.EQ.13) GOTO LINER	;<CR>
	  IF (TCHAR.EQ.23) GOTO ABODUC	;<CTRLW> TYPED -- START LINE OVER
	  IF (TCHAR.NE.9.AND.TCHAR.NE.21) GOTO LOCAT
	END
	CALL INPUT2
	GOTO (ABODUC), INXCTL
	LOCAT = ENTRY
	GOTO (ANYCN3), CNGCTL
LINER,
	XCALL OUTPT (ROW3,6,0,'LINER:',1)
	CTL(4,14) = '13,01,00,# '
	IF (CNGCTL)
	BEGIN
	  CALL ACCEPT3
	  IF (TCHAR.EQ.13) GOTO CALLIN	;<CR>
	  IF (TCHAR.EQ.23) GOTO ABODUC	;<CTRLW> TYPED -- START LINE OVER
	  IF (TCHAR.NE.9.AND.TCHAR.NE.21) GOTO LINER
	END
	FOR I = 1 STEP 1 UNTIL 6
	  DO XCALL OUTPT (ROW+I+2,COL,0,DLINER(I),1)
	CALL INPUT3
	GOTO (ABODUC), INXCTL
	LINER = ENTRY
	IF (LINER.EQ.0) LINER = 1
	IF (LINER.LT.1.OR.LINER.GT.6) GOTO LINER
	XCALL OUTPT (ROW3,COL,0,DLINER(LINER),1)
	FOR I = 1 STEP 1 UNTIL 6
	  DO XCALL OUTPT (ROW+I+2,COL,1,'\',1)

	CALL CALLIN		; Calculate the number of square feet of liner
	GOTO ANYCN3
CALLIN,
		; Calculate the number of square feet of liner for this item
	DEC1 = 
	DEC2 =
	DEC3 =
	SQFLIN =

	DEC1 = ( DLINE * SQFEET ) #2
		; DLINE is a overage % of square feet ( SEE DUCMNT.COP )

	DEC1 = ( DEC1 + 500 ) #3

	SQFLIN = DEC1 + SQFEET
		; Calculate the waste, and add square feet of duct

	ALPHA =
	ALPHA(1,7) = SQFLIN,NUMASK
	ALPHA(9,13) = 'SQ FT'
	XCALL OUTPT (ROW3,29,0,ALPHA(1,14),1)
	ALPHA (1,11) = LINPRC,D3PMSK
	XCALL OUTPT (ROW3,56,0,ALPHA(1,11),1)
	XCALL OUTPT (ROW3,68,0,'SF',1)
	ALPHA(1,10) = (SQFLIN * LINPRC)#1,DLRMSK
	XCALL OUTPT (ROW3,71,0,ALPHA(1,10),1)
	
	CALL INPUT
	RETURN





;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;TYPE CAT    STY  SEAM SEAL   QT/LB  DUCT SIZE    GAUGE      PRICE  UM       EXT 
;---- ------ ---- ---- ----   -----  -----------  -----  ---------  --  -------- 
;GALV L/SHAP S&D  S/L  SEAL   ZZZZZ  000 x00 x 0  ZZ GA   
;     LOCAT: XXXXXXXXXXXXXXX  ZZZZZ  LBS                ZZZZZZ.ZZZ- LB ZZZZZZ.ZZ-
;     LINER:                 XXXXXX  SQ FT              ZZZZZZ.XXX- SF ZZZZZZ.ZZ-
;;;;;;;;;;;;;;;;;;;;;;;;;;;
SCRN4,
TGAQTY,
	GOTO SCRN1



;;;;;;;;;;;;;;;;;;;;;;;;;;;
DSPDUC,
	XCALL OUTPT (ROW,01,0,DTYPE(DUTYPE),1)
	XCALL OUTPT (ROW,06,0,DCAT(CAT),1)
	XCALL OUTPT (ROW,13,0,DSTY(STY),1)
	XCALL OUTPT (ROW,18,0,DSEAM(SEAM),1)
	XCALL OUTPT (ROW,23,0,DSEAL(SEAL),1)
	ALPHA(1,6) = JOINT,NUMASK
	XCALL OUTPT (ROW,29,0,ALPHA(1,6),1)
	ALPHA(1,4) = SIZE1,NUMASK
	ALPHA(4,4) = 'x'
	ALPHA(5,8) = SIZE2,NUMASK
	ALPHA(8,8) = 'x'
	ALPHA(9,11) = SIZE3,NUMASK
	XCALL OUTPT (ROW,37,0,ALPHA(1,11),1)
	ALPHA (1,3) = GAUGE,NUMASK
	ALPHA(3,5) = ' GA'
	XCALL OUTPT (ROW,50,0,ALPHA(1,5),1)

	XCALL OUTPT (ROW2,6,0,'LOCAT:',1)
	XCALL OUTPT (ROW2,13,0,LOCAT,1)
	ALPHA(1,6) = POUNDS,NUMASK
	ALPHA(7,10) = ' LBS'
	XCALL OUTPT (ROW2,29,0,ALPHA(1,10),1)
	ALPHA(1,11) = GPRICE,D3PMSK
	XCALL OUTPT (ROW2,55,0,ALPHA(1,11),1)
	ALPHA(1,10) = (POUNDS * GPRICE)#1,DLRMSK
	XCALL OUTPT (ROW2,70,0,ALPHA(1,10),1)

	XCALL OUTPT (ROW3,6,0,'LINER:',1)
	XCALL OUTPT (ROW3,13,0,DLINER(LINER),1)
	ALPHA (1,7) = SQFLIN,NUMASK
	ALPHA (8,13) = ' SQ FT'
	XCALL OUTPT (ROW3,28,0,ALPHA(1,13),1)
	ALPHA (1,11) = LINPRC,D3PMSK
	XCALL OUTPT (ROW3,55,0,ALPHA(1,11),1)
	ALPHA(1,10) = (SQFLIN * LINPRC)#1,DLRMSK
	XCALL OUTPT (ROW3,70,0,ALPHA(1,10),1)
ANYCN3,
	CNGCTL = 4
	XCALL ANYCN(CNGCTL,WHATNO)
	IF (CNGCTL.EQ.-1) GOTO DASKCNG
	IF (SELECT.EQ.1.AND.CNGCTL) GOTO DUTYPE
ENDDUC,
	GOTO (ADDDUC,CNGDUC,CNGDUC), SELECT
	XCALL MESAG ('INVALID SELECT FLAG',1)
	GOTO ENDDUC
ADDDUC,
	DUCTOR = OORDNO
	LOKCTL = 1
	XCALL ISIO (6,DUCACC,KEY175,STORE,LOKCTL)
	IF (LOKCTL.EQ.4) XCALL MESAG('**CANNOT ADD RECORD - DUPLICATE KEY',1)
	IF (LOKCTL.EQ.5) XCALL MESAG('**CANNOT ADD RECORD - ORDLIN POSSIBLY FULL',1)
	IF (LOKCTL.NE.0) GOTO ABOLIN
	GOTO NXTDUC
CNGDUC,
	IF (CNGKEY)
	THEN BEGIN
	  DECMAL = KEY175
	  KEY175 = SAVKEY,MASK
	  LOKCTL = 1
	  XCALL ISIO (6,DUCACC,KEY175,DELETE,LOKCTL)
	  KEY175 = DECMAL,MASK
	  LOKCTL = 1
	  XCALL ISIO (6,DUCACC,KEY175,STORE,LOKCTL)
	  CNGKEY =
	END
	ELSE BEGIN
	  LOKCTL = 1
	  XCALL IO (6,DUCACC,KEY175,WRITE,LOKCTL)
	END
	IF (SELECT.EQ.3) GOTO FNDDUC
	GOTO NXTDUC

;;;;;;;;;;;
;
;	GET CUSTOMER RECORD
;
GETCUS,
	KEY(1,6) = OCUSNO, MASK
	XCALL SERCH (2,CUSIDX,KEY(1,6),1,6,ORGCUS,BSMID,SRCCTL,4,7,11,0,0,0,0)
	GO TO (BADCUS), SRCCTL
	LOKCTL = 1
	XCALL IO (1,CUSMAS,IRC001,READ,LOKCTL)
	IF (CUSCD.EQ.'**') GOTO BADCUS
	RETURN
BADCUS,
	XCALL MESAG ('CUSTOMER NOT ON FILE',1)
	CUSMAS = 
	NAME = '* CUSTOMER NOT ON FILE *'
	SRCCTL = 1
	RETURN
;
;	GET SHIP VIA INFO
;
GETSHV,
	SRCCTL = 2
	OPEN (7,I,SHVFIL)
	XCALL SERCH (7,SHPVIA,OSHVIA,1,1,ORGSHV,BSMID,SRCCTL,4,2,7,0,0,0,0)
	CLOSE 7
	IF (SRCCTL)
	BEGIN
	  SHPVIA =
	  SHPVDS = 'SHPVIA NOT FND'
	END
	RETURN
;
;	GET AR TERMS
;
GETART,
	SRCCTL = 2
	OPEN (7,I,ARTFIL)
	XCALL SERCH (7,ARTERM,OTERMS,1,1,ORGART,BSMID,SRCCTL,4,2,7,0,0,0,0)
	CLOSE 7
	IF (SRCCTL)
	BEGIN
	  ARTERM =
	  ARTRDS = 'ARTERMS NOT FND'
	END
	RETURN
;
;	GET SHIP TO INFO
;
GETSHT,
	XCUSNO = OCUSNO
	SHPNO = OSHPTO
	SRCCTL = 2
	OPEN (7,I,SHTFIL)
	XCALL SERCH (7,SHIPTO,SKEY,1,10,ORGSHT,BSMID,SRCCTL,4,11,16,0,0,0,0)
	CLOSE 7
	IF (SRCCTL)
	BEGIN
	  SHIPTO =
	  SHTONA = '* SHIP TO NOT ON FILE *'
	END
	RETURN
;
;	GET INVENTORY RECORD
;
GETITM,
	KEY = LITMNO
	XCALL SERCH (9,ITMIDX,KEY,1,15,ORGITM,BSMID,SRCCTL,4,16,20,0,0,0,0)
	IF (SRCCTL) GOTO BADITM
	LOKCTL = 1
	XCALL IO (8,ITMMAS,IRC041,READ,LOKCTL)
	RETURN
BADITM,
	XCALL MESAG ('ITEM NOT ON FILE',1)
	ITMMAS =
	DESCR = '* ITEM NOT ON FILE *'
	RETURN
;
;	DEFAULT TO SELECTION 1
;
DEFLT1,
	IF (ENTRY.EQ.BLANKS) ENTRY(1,1) = '1'
	XCALL OUTPT (ROW,COL,0,ENTRY(1,1),1)
	RETURN
;
;	SUBROUTINE TO DISPLAY ORDER SCREEN 1
;
OE1,
	XCALL OUTPT (2,1,2,'\',1)
	XCALL OUTPT (4,4,0,'1. ORDER #',1)
	XCALL OUTPT (4,31,0,'2. DATE',1)
	XCALL OUTPT (4,50,0,'3. PROMISED DATE',1)
	XCALL OUTPT (6,4,0,'4. CUST #',1)
	XCALL OUTPT (6,50,0,'   CREDIT CODE  ',1)	;;; ADDED DS 1/7/87
	XCALL OUTPT (8,4,0,'5. SALESMN',1)
	XCALL OUTPT (8,23,0,'6. ORD/EST ',1)
	XCALL OUTPT (8,40,0,'7. SHIP VIA',1)
	XCALL OUTPT (8,59,0,'8. PO #',1)
	XCALL OUTPT (10,4,0,'9. DISCNT',1)
	XCALL OUTPT (10,22,0,'10. TERMS',1)
	XCALL OUTPT (10,39,0,'11. COLL/PPD',1)
	XCALL OUTPT (10,58,0,'12. JOB #',1)
	XCALL OUTPT (12,3,0,'13. SHIP-TO',1)
	XCALL OUTPT (13,7,0,'14.',1)
	XCALL OUTPT (14,7,0,'15.',1)
	XCALL OUTPT (15,7,0,'16.',1)
	XCALL OUTPT (16,7,0,'17.',1)
	XCALL OUTPT (20,3,0,'18. COMMENT',1)
	IF (DSTFLG.EQ.'Y') XCALL OUTPT (22,58,0,'19. AR ACCT #',1)
	RETURN
OE2,
	XCALL OUTPT (2,1,2,'       ORDER: ',1)
	ALPHA(1,6) = OORDNO,'ZZZZZX'
	XCALL OUTPT (0,0,0,ALPHA(1,6),1)
	XCALL OUTPT (0,0,0,'  CUST: ',1)
	XCALL OUTPT (0,0,0,OCUSNM,1)
	XCALL OUTPT (4,1,1,'ITEM NUMBER/DESCRIPTION',1)
	XCALL OUTPT (4,43,0,'QTY-ORD',1)
	XCALL OUTPT (4,56,0,'PRICE     SEQ#',1)
	XCALL OUTPT (4,72,0,'EXT-PRICE',1)
	RETURN
OE3,
	XCALL OUTPT (2,1,2,'       ORDER: ',1)
	ALPHA(1,6) = OORDNO,'ZZZZZX'
	XCALL OUTPT (0,0,0,ALPHA(1,6),1)
	XCALL OUTPT (0,0,0,'  CUST: ',1)
	XCALL OUTPT (0,0,0,OCUSNM,1)
	XCALL OUTPT (4,1,0,DHDR1,1)
	XCALL OUTPT (5,1,0,DHDR2,1)
	RETURN


TOOBIG,
	XCALL MESAG ('TOTAL SALE OVER 1 MILLION DOLLARS',1)
	GOTO ABOLIN
DSP3DP,				;;;
	OPTION = 4		;;;
	GOTO CALDSP		;;;
DSPNUM,
	OPTION = 1
	GO TO CALDSP
DSPDTE,
	OPTION = 2
	GO TO CALDSP
DSPDLR,
	OPTION = 3
CALDSP,
	XCALL DSPLY(MAX,ROW,COL,DECMAL,OPTION,1)
	RETURN
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	RETURN
ACCEPT,
	XCALL FLAGS (00010000)			;DISABLE CHARACTER ECHOING
	XCALL OUTPT (ROW,COL,0,'\',1)
	ACCEPT (15,TCHAR)
	IF (TCHAR.EQ.13) ACCEPT (15,DCHAR)
	XCALL FLAGS (00000000)			;RE-ENABLE CHARACTER ECHOING
	RETURN
INPUT2,
	XCALL INPUT (ROW2,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	RETURN
ACCEPT2,
	XCALL FLAGS (00010000)			;DISABLE CHARACTER ECHOING
	XCALL OUTPT (ROW2,COL,0,'\',1)
	ACCEPT (15,TCHAR)
	IF (TCHAR.EQ.13) ACCEPT (15,DCHAR)
	XCALL FLAGS (00000000)			;RE-ENABLE CHARACTER ECHOING
	RETURN
INPUT3,
	XCALL INPUT (ROW3,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	RETURN
ACCEPT3,
	XCALL FLAGS (00010000)			;DISABLE CHARACTER ECHOING
	XCALL OUTPT (ROW3,COL,0,'\',1)
	ACCEPT (15,TCHAR)
	IF (TCHAR.EQ.13) ACCEPT (15,DCHAR)
	XCALL FLAGS (00000000)			;RE-ENABLE CHARACTER ECHOING
	RETURN
END
;TYPE CAT    STY  SEAM SEAL  QT/LB   DUCT SIZE    GAUGE      PRICE  UM       EXT 
;---- ------ ---- ---- ----  -----   -----------  -----  ---------  --  -------- 
;GALV L/SHAP S&D  S/L  SEAL  ZZZZZ   000 x00 x 0  ZZ GA 
;     LOCAT: XXXXXXXXXX      ZZZZZ   LBS                ZZZZZZ.ZZZ- LB ZZZZZZ.ZZ-
;     LINER:                XXXXXX   SQ FT              ZZZZZZ.XXX- SF ZZZZZZ.ZZ-


