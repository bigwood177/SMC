SUBROUTINE CMSC2
;
;  CMSC2 / COP 
;
;
;		::PCPYCOP.DEF::
;*********************************************************************
;		CUSTOMER ORDER PROCESSING 
;		
;		RELEASED: AUGUST 1, 1984 (d70s10)
;***********************************************************************
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984
;		MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;		HANDLES SECOND SCREEN IN ADD MODE OF CRMEMO
;
	CUSTP2	,A
	PMAX	,D
	LSTINV	,D
	TAXFLG	,A
	LINCNT	,D
	FULL	,D
	CDSCNT	,D
	CSALAM	,D
	CCOST	,D
	CCRMNO	,D
	CCUSNM	,A
	TAXTOT	,D
	CLOC	,A
	PCODES	,A
	PDISCS	,D
	V	,D
RECORD CRMLIN		
		.INCLUDE 'DEF:RD047A.DEF'
RECORD ITMMAS		
		.INCLUDE 'DEF:RD041A.DEF'
RECORD DUMINV ,X	
		.INCLUDE 'DEF:RD041B.DEF'
RECORD DUMLIN,X		
		.INCLUDE 'DEF:RD047B.DEF'
RECORD ITMIDX  		
		.INCLUDE 'DEF:RD042A.DEF'
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD
	RUNTOT	,D8
	RUNQTY	,D6
	EXPRCE	,D8
	DCODES	,45A2		;SET FOR MAX # OF CODES ALLOWED IN ITMMAS
				;CONTROL RECORD (USU. 45)
	DDISCS	,45D2		;(SAME AS IMMEDIATELY ABOVE)
	OPTION	,D1
	ENTRY	,A31
	INXCTL  ,D1
	CNGCTL	,D1
	WHATNO	,D2
	SAVEL	,D2
	DECMAL	,D18
	KEY   	,A15
	CTR	,D2
	BSEND	,D5
	BSMID	,D5
	SRCCTL	,D1
	MAXINV	,D5
	ROW2	,D2
	TOTWGT	,D10
	TCHAR	,D3
	DCHAR	,D3
	ORGINV	,D5
	DIS	,A2
	LOCTNS	,D2
	PRICES	,D2
	DMAX	,D2, 45		;SET TO MAX # OF DCODES IN ITMMAS
				;CONTROL RECORD (USU. 45)
	ALPHA	,A7
	BLANKS	,A15
	SYSTEM	,D1
	ROWX	,D2
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1
	JUST	,D1
PROC
	RUNTOT =
	RUNQTY =
	TOTWGT =
	XCALL ENVRN(SYSTEM)
	XCALL OUTPT (1,1,2,'\',V)
	DIS = CDSCNT,'ZX'
	XCALL CR2(CCUSNM,DIS,V)
RDERR,
	LOKCTL = 1
	XCALL IO (1,DUMINV,1,READ,LOKCTL)
	UNLOCK 1
	JUST = JSTIFY
	ORGINV = ORG041
	MAXINV = MAX041
	LOCTNS = NUMLOC
	PRICES = NUMPRC
	CTR =
;;;MOVE,
;;;	INCR CTR
;;;	IF (CTR.GT.DMAX) GO TO NOMORE
;;;	IF (DPRDCD(CTR).EQ.'  ') GO TO BLANK
;;;	DCODES(CTR) = DPRDCD(CTR)
;;;	DDISCS(CTR) = DDISC(CTR)
;;;	GO TO MOVE
;;;BLANK,
;;;	DCODES(CTR) =
;;;	DDISCS(CTR) =
;;;	INCR CTR
;;;	IF (CTR.LE.DMAX) GO TO BLANK
NOMORE,
	ROW2 = 3
BEGIN2,
	IF (ROW2.GE.11) CALL SHIFT
	ROW = ROW2
	XCALL OUTPT (ROW,1,1,'\',V)
ITEM,
	CTL (4,14) = '01,15,01,AE'
	CALL INPUT
	GO TO (CLRDTA,ENDITM), INXCTL
	IF (JUST) XCALL FRMAT (ENTRY(1,15),15)
	XCALL OUTPT (ROW,1,0,ENTRY(1,15),V)
	CLITEM = ENTRY (1,15)
	IF (CLITEM.EQ.BLANKS) GO TO ITEM
	BSEND = ORGINV
	KEY = CLITEM
	XCALL SERCH (2,ITMIDX,KEY,1,15,BSEND,BSMID,SRCCTL,4,16,20,0,0,0,0)
	GO TO (BADITM), SRCCTL
	LOKCTL = 1
	XCALL IO (1,ITMMAS,IRC041,READ,LOKCTL)
	XCALL OUTPT (12,1,1,'\',V)
	IF (CLITEM.EQ.'???') GO TO ENTDES
	XCALL OUTPT (ROW,17,0,DESCR,V)
	CLDESC = DESCR
QNTITY,
	CTL (4,14) = '49,04,00,# '
	CALL INPUT
	GO TO (CLRDTA), INXCTL
	CALL DEFLT1
	CLQTY = ENTRY
	IF (CLITEM.EQ.'???') GO TO OVRPRC
	CTR =
PRICE,
	INCR CTR
	IF (CTR.GT.PRICES) GO TO FSTPRC
	IF (CTR.GT.1.AND.PRICCD(CTR).EQ.'  ') GO TO FSTPRC
	IF (PRICCD(CTR).EQ.CUSTP2) GO TO PRICE1
	GO TO PRICE
FSTPRC,
	CTR = 1
PRICE1,
	CLPRCE = PRICE(CTR)
	CTL (4,8) = '55,07'
	DECMAL = CLPRCE
	CTR =
LOCA,
	INCR CTR
	IF (CTR.GT.LOCTNS.OR.LOC(CTR).EQ.'  ') GO TO BADLOC
	IF (LOC(CTR).NE.CLOC) GO TO LOCA
	SAVEL = CTR
	CLLOC = LOC(CTR)
	CLUOFM = SUOFM
	CLPDCD = PRDCAT
	CALL DSPDLR
	COL = 54
	CALL ACCEPT
	IF (TCHAR.EQ.13) GO TO DISCNT
	GO TO OVRPRC
BADLOC,
	XCALL MESAG ('THIS ITEM NOT STOCKED AT THIS LOCATION',1)
	GO TO BEGIN2
ACCEPT,
	XCALL OUTPT (ROW,COL,0,'\',V)
	ACCEPT (15,TCHAR)
	IF (SYSTEM.NE.1 .AND. TCHAR.EQ.13) ACCEPT (15,DCHAR)
	RETURN
ENTDES,
	CTL (4,14) = '17,30,01,A '
	CALL INPUT
	GO TO (CLRDTA), INXCTL
	CLDESC = ENTRY
	IF (CLITEM.EQ.'???') GO TO QNTITY
OVRPRC,
	CTL (4,14) = '55,07,01,$ '
	CALL INPUT
	GO TO (CLRDTA), INXCTL
	CLPRCE = ENTRY
	IF (CLITEM.NE.'???') GO TO DISCNT
	INCR ROW
ENTCST,
	XCALL OUTPT (ROW,1,1,'\',V)
	XCALL OUTPT (ROW,27,0,'ENTER ITEM COST:',V)
	CTL (4,14) = '44,06,00,$ '
	CALL INPUT
	GO TO (CLRDTA), INXCTL
	AVGCST = ENTRY
	AVGCST = AVGCST*10
	ROW = ROW - 1
DISCNT,
	CLCOST = AVGCST#1
	IF (PRDCAT.EQ.'  ') GO TO NODISC
	CTR =
DISCT2,
	INCR CTR
	IF (CTR.GT.PMAX.OR.PCODES(CTR).EQ.'  ') GO TO DISCT3
	IF (PCODES(CTR).NE.PRDCAT) GO TO DISCT2
	CLDISC = PDISCS(CTR)
	GO TO TAKDIS
DISCT3,
	CTR =
DISCT4,
	INCR CTR
	IF (CTR.GT.DMAX) GO TO NODISC
	IF (DCODES(CTR).NE.PRDCAT) GO TO DISCT4
	CLDISC = DDISCS(CTR)
	GO TO TAKDIS
NODISC,
	CLDISC =
TAKDIS,
	CTL(4,8) = '65,02'
	DECMAL = CLDISC
	CALL DSPNUM
	COL = 64
	CALL ACCEPT
	IF (TCHAR.EQ.13) GO TO EXTPRC
	CTL (4,14) = '65,02,00,# '
	CALL INPUT
	GO TO (CLRDTA), INXCTL
	CLDISC = ENTRY
EXTPRC,
	EXPRCE = (CLQTY*CLPRCE) - ((CLQTY*CLPRCE*CLDISC)/100)
	EXPRCE = EXPRCE - ((EXPRCE*CDSCNT)/100)
	CTL (4,8) = '70,08'
	DECMAL = EXPRCE
	CALL DSPDLR
ISLNOK,
	CNGCTL = 2
	XCALL ANYCN(CNGCTL,WHATNO)
	ROW = ROW2
	GO TO (LINEOK), CNGCTL+1
	EXPRCE =
	GO TO CLRDTA
RUNQTY,
	XCALL OUTPT (11,1,1,'RUNNING QTY:',V)
	CTL = '11,14,06'
	DECMAL = RUNQTY
	CALL DSPNUM
	XCALL OUTPT (11,55,0,'RUNNING TOTAL:',V)
	CTL = '11,70,08'
	DECMAL = RUNTOT
	CALL DSPDLR
	RETURN
LINEOK,
	CLCRNO = LSTINV
	RUNQTY = RUNQTY + CLQTY
	RUNTOT = RUNTOT + EXPRCE
	CCOST = CCOST + CLCOST*CLQTY
	IF (TAXFLG.NE.'   '.AND.TXFLAG.EQ.'Y') TAXTOT = TAXTOT + EXPRCE
	CALL RUNQTY
	IF (CLITEM.EQ.'???') GO TO ADDLIN
	XCALL OUTPT (12,1,0,'ADJUST QTY ON HAND ?',V)
	CTL = '12,23,01,01,YN'
	CALL INPUT
	GO TO (UPDINV,ADDLIN), INXCTL
UPDINV,
	CLQTY = (-1)*CLQTY
ADDLIN,
	LOKCTL = 1
	XCALL IO (7,DUMLIN,1,READ,LOKCTL)
	IF (REC047.GE.MAX047) GO TO FULL
	INCR REC047
	LINCNT = REC047
	LOKCTL = 1
	XCALL IO (7,DUMLIN,1,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IO (7,CRMLIN,LINCNT,WRITE,LOKCTL)
	XCALL OUTPT (12,1,1,'\',V)
	IF (LINCNT+2.GE.MAX047) GO TO FULL
	INCR ROW2
	CRMLIN =
	GO TO BEGIN2
FULL,
	FULL = 1
	UNLOCK 1
	RETURN
BADITM,
	XCALL MESAG('ITEM NOT ON FILE',1)
	GO TO ITEM
CLRDTA,
	XCALL OUTPT (ROW,1,1,'\',V)
	XCALL OUTPT (12,1,1,'\',V)
	ROWX = (ROW+1)
	IF (CLITEM.EQ.'???') XCALL OUTPT (ROWX,1,1,'\',V)
	CRMLIN =
	GO TO BEGIN2
SHIFT,
	XCALL OUTPT (12,1,0,'\',V)
	DISPLAY (15,10)
	IF (V.EQ.2) DISPLAY (15,10)
	IF (SYSTEM.EQ.-7) DISPLAY (15,10)	;IBMPC-25 ROW SCREEN
	XCALL OUTPT (10,1,1,'\',V)
	XCALL CR2(CCUSNM,DIS,V)
	CALL RUNQTY
	ROW2 = ROW2 - 1
	RETURN
ENDITM,
	CSALAM = RUNTOT
;	CLOSE 2
;	CLOSE 7
;	CLOSE 1
	RETURN
INPUT,
	XCALL INPUT(ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
DSPNUM,
	OPTION = 1
	GO TO CALDSP
DSPDTE,
	OPTION = 2
	GO TO CALDSP
DSPDLR,
	OPTION = 3
CALDSP,
	XCALL DSPLY(MAX,ROW,COL,DECMAL,OPTION,V)
	RETURN
DEFLT1,
	IF (ENTRY.EQ.BLANKS) ENTRY(1,1) = '1'
	XCALL OUTPT (ROW,COL,0,ENTRY(1,1),V)
	RETURN
END
