;  BAKORD / COP 
;
;
RECORD BAKORD   	
		.INCLUDE 'DEF:RD051A.DEF'
RECORD ,X		
		.INCLUDE 'DEF:RD051B.DEF'
RECORD BOINDX   	
		.INCLUDE 'DEF:RD052A.DEF'
RECORD ORDLIN   	
		.INCLUDE 'DEF:RD045A.DEF'
RECORD,X
		.INCLUDE 'DEF:RD045D.DEF'
RECORD ORDHDR   	
		.INCLUDE 'DEF:RD044A.DEF'
RECORD SNDMSG
		,A3,'CP:'
	PRGNAM	,A6
	RCNT	,D5
		,D5
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD
		.INCLUDE 'DEF:RD051S.DEF'
		.INCLUDE 'DEF:RD052S.DEF'

RECORD	DIS
	II	,D6

RECORD	VARS
	ITMFLG	,D1
	CUSFLG	,D1
	MAXCNT	,D5
	ADDCNT	,D5,00001
	BLANKS	,A25
	DUMSIZ	,D5,	00500	;ARBITRARY #RECORDS FOR CREATING BAKORD FILE
				;CHANGE TO LARGER OR SMALLER VALUE IF NEEDED
	ENTRY	,A7
	INXCTL	,D1
	CNGCTL	,D1
	WHATNO	,D1,0
	LOCATN	,A2
	ABORT	,D1
	ABTCNT	,D1
	DATE	,D6
	LINE	,A80
	BRACKS	,A6,']]]]]]'
	RPT1	,A45,'BACKORDERED ITEMS REPORT - STOCKED ITEMS ONLY'
	RPT2	,A49,'BACKORDERED ITEMS REPORT - NON-STOCKED ITEMS ONLY'
	RPT3	,A49,'BACKORDERED ITEMS REPORT - ALL ITEMS ON BACKORDER'
	RPT4	,A51,'OPEN CUSTOMER ORDER REPORT - NON-STOCKED ITEMS ONLY'
	RPT5	,A38,'OPEN CUSTOMER ORDER REPORT - ALL ITEMS'
	SYDATE	,D6
	STDAT	,D6
	ENDAT	,D6
	SAVDAT	,D6
	RPTYP	,D1
	DATEFL	,A1
	BLKSIZ	,D6
	LSCHDT	,D6	;TO BE ADDED TO THE ORDLIN RECORD IN THE FUTURE
	SWITCH	,D1
	V	,D1
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1
PROC
	XCALL TERID (V)
	XCALL RDATE (DATE)
	SYDATE(1,2) = DATE(5,6)
	SYDATE(3,6) = DATE(1,4)
	DATE =
	SWITCH = 1
	XCALL FILES (10,'I',41,SWITCH)
	IF (SWITCH.EQ.9) GO TO END1
	CLOSE 10
	SWITCH = 1
	XCALL FILES (4,'SI',44,SWITCH)		;FILE # 44 -- ORDHDR FILE
	IF (SWITCH.EQ.9) XCALL FILES (10,'I',41,4)
	IF (SWITCH.EQ.9) GO TO END1
	SWITCH = 1
	XCALL FILES (5,'SI',45,SWITCH)		;FILE # 45 -- ORDLIN FILE
	IF (SWITCH.NE.9) GO TO OPEN67
	XCALL WATE(3,V)
	CALL CLOSE1
	XCALL PGCHN ('CP:CPMENU',1)
OPEN67,
	SWITCH = 3
	XCALL FILES (7,'O',52,SWITCH)		;FILE # 52 -- BOINDX FILE
	IF (SWITCH.NE.9) GO TO OPEN6
	XCALL WATE(3,V)
	CALL CLOSE2
	GO TO END1
OPEN6,
	BLKSIZ = ((SIZ052+2)*(DUMSIZ+2)/512) + 1
				; CALCULATES NUMBER OF BLOCKS TO
				; RESERVE FOR BOINDX FILE
	XCALL OFILE (7,052,BLKSIZ,SIZ052,SWITCH)
	IF (SWITCH.EQ.1) CALL CLOSE3
	IF (SWITCH.EQ.1) GO TO END1
	SWITCH = 3
	XCALL FILES (6,'O',51,SWITCH)		;FILE # 51 -- BAKORD FILE
	IF (SWITCH.EQ.9) CALL CLOSE3
	IF (SWITCH.EQ.9) GO TO END1
	BLKSIZ = ((SIZ051+2)*(DUMSIZ+2)/512) + 1
					; CALCULATES NUMBER OF BLOCKS TO
					; RESERVE FOR BAKORD FILE
	XCALL OFILE (6,051,BLKSIZ,SIZ051,SWITCH)
	IF (SWITCH.EQ.1) CALL CLOSE4
	IF (SWITCH.EQ.1) GO TO END1
DSPLA1,
	XCALL OUTPT (1,1,2,'PRINT CUSTOMER ORDER STATUS REPORTS',V)
	XCALL OUTPT (4,12,0,'PLEASE SELECT REPORT DESIRED',V)
	XCALL OUTPT (5,15,0,'1. ',V)
	XCALL OUTPT (0,0,0,RPT1,V)
	XCALL OUTPT (6,15,0,'2. ',V)
	XCALL OUTPT (0,0,0,RPT2,V)
	XCALL OUTPT (7,15,0,'3. ',V)
	XCALL OUTPT (0,0,0,RPT3,V)
	XCALL OUTPT (8,15,0,'4. ',V)
	XCALL OUTPT (0,0,0,RPT4,V)
	XCALL OUTPT (9,15,0,'5. ',V)
	XCALL OUTPT (0,0,0,RPT5,V)
RPTNO,
	CTL = '04,42,01,01,#E'
	CALL INPUT
	GOTO (RPTNO,END), INXCTL
	RPTYP = ENTRY(1,1)
	IF (RPTYP.LT.1.OR.RPTYP.GT.5) GOTO RPTNO
	CNGCTL = 2
	XCALL ANYCN (CNGCTL,WHATNO)
	GOTO (RPTNO), CNGCTL
DSPLA2,
	CNGCTL =
	XCALL OUTPT (3,8,2,'\',V)
	IF (RPTYP.EQ.1) XCALL OUTPT (3,14,0,'** ',V)
	IF (RPTYP.EQ.1) XCALL OUTPT (0,0,0,RPT1,V)
	IF (RPTYP.EQ.1) XCALL OUTPT (0,0,0,' **',V)
	IF (RPTYP.EQ.2) XCALL OUTPT (3,14,0,'** ',V)
	IF (RPTYP.EQ.2) XCALL OUTPT (0,0,0,RPT2,V)
	IF (RPTYP.EQ.2) XCALL OUTPT (0,0,0,' **',V)
	IF (RPTYP.EQ.3) XCALL OUTPT (3,14,0,'** ',V)
	IF (RPTYP.EQ.3) XCALL OUTPT (0,0,0,RPT3,V)
	IF (RPTYP.EQ.3) XCALL OUTPT (0,0,0,' **',V)
	IF (RPTYP.EQ.4) XCALL OUTPT (3,14,0,'** ',V)
	IF (RPTYP.EQ.4) XCALL OUTPT (0,0,0,RPT4,V)
	IF (RPTYP.EQ.4) XCALL OUTPT (0,0,0,' **',V)
	IF (RPTYP.EQ.5) XCALL OUTPT (3,14,0,'** ',V)
	IF (RPTYP.EQ.5) XCALL OUTPT (0,0,0,RPT5,V)
	IF (RPTYP.EQ.5) XCALL OUTPT (0,0,0,' **',V)
	XCALL OUTPT (5,11,0,'1. REPORT BY ITEM ?',V)
	XCALL OUTPT (6,11,0,'2. REPORT BY CUSTOMER ?',V)
	XCALL OUTPT (7,11,0,'3. BY REQUEST OR PROMISED DATE (R OR P) ?',V)
	XCALL OUTPT (8,11,0,'4. STARTING DATE',V)
	XCALL OUTPT (9,14,0,'ENDING DATE',V)
	XCALL OUTPT (10,11,0,'5. FOR LOCATION',V)
	XCALL OUTPT (11,21,0,'(SCREEN FIELD 3 ACCEPTS "END")',V)
ITEM,
	CTL = '05,53,01,00,YN'
	CALL INPUT
	ITMFLG = 2 - INXCTL
	GO TO (ANYCNG), CNGCTL
CUST,
	CTL = '06,53,01,00,YN'
	CALL INPUT
	CUSFLG = 2 - INXCTL
	GO TO (ANYCNG), CNGCTL
TYPDAT,
	CTL = '07,53,01,00,AE'
	CALL INPUT
	GO TO (DSPLA2,DSPLA1), INXCTL
	IF (ENTRY(1,1).EQ.' ') ENTRY (1,1) = 'P'
	XCALL OUTPT (7,53,0,ENTRY(1,1),V)
	DATEFL = ENTRY(1,1)
	IF (DATEFL.NE.'R'.AND.DATEFL.NE.'P') GOTO TYPDAT
	GOTO (ANYCNG) ,CNGCTL
DATES,
	CTL = '08,53,06,00,D '
	CALL INPUT
	GO TO (DSPLA2), INXCTL
	IF (ENTRY.EQ.BLANKS) GOTO ALLDAT
	SAVDAT = ENTRY (1,6)
	STDAT(1,2) = SAVDAT(5,6)
	STDAT(3,6) = SAVDAT(1,4)
	IF (STDAT.GT.SYDATE) GOTO BADDAT
	CTL = '09,53,06,00,D '
	CALL INPUT
	GO TO (DSPLA2), INXCTL
	SAVDAT = ENTRY (1,6)
	ENDAT(1,2) = SAVDAT(5,6)
	ENDAT(3,6) = SAVDAT(1,4)
	IF (ENDAT.EQ.0) ENDAT = STDAT
	IF (ENDAT.LT.STDAT) GOTO BADDAT
	GOTO (ANYCNG), CNGCTL
LOCAT,
	CTL = '10,53,02,00,A '
	CALL INPUT
	GO TO (DSPLA2), INXCTL
	IF (ENTRY.EQ.BLANKS) XCALL OUTPT (10,53,0,'ALL  ',V)
	LOCATN = ENTRY
	RPTLOC = LOCATN
ANYCNG,
	XCALL ANYCN(CNGCTL,WHATNO)
	GO TO(CONTIN,CNGBR), CNGCTL + 1
CNGBR,
	GOTO (ITEM,CUST,TYPDAT,DATES,LOCAT), WHATNO
	GOTO ANYCNG
BADDAT,
	XCALL MESAG ('STARTING DATE TOO LATE',1)
	GOTO DATES
ALLDAT,
	XCALL OUTPT (8,53,0,'ALL   ',V)
	XCALL OUTPT (9,53,0,'         ',V)
	STDAT =
	ENDAT = 999999
	GOTO (ANYCNG), CNGCTL
	GOTO LOCAT
CONTIN,
	IF (ITMFLG.EQ.0.AND.CUSFLG.EQ.0) GO TO END
	XCALL WATE(4,V)
	XCALL OUTPT (2,1,1,'BUILD WORK FILE',1)
	LOKCTL = 1
	XCALL IOS (6,BAKORD,WRITE,LOKCTL)
	IF (LOKCTL.EQ.3) GO TO END
	LOKCTL = 1
	XCALL IOS (7,BOINDX,WRITE,LOKCTL)
	IF (LOKCTL.EQ.3) GO TO END
	LORDNO =
	LINSEQ =
	OORDNO =
	LOKCTL = 1
	XCALL ISIO (5,ORDLIN,ORDKEY,READ,LOKCTL)
	IF (LOKCTL.EQ.3) GO TO EOFLIN
	LOKCTL = 1
	XCALL ISIO (4,ORDHDR,OORDNO,READ,LOKCTL)
	IF (LOKCTL.EQ.3) GO TO EOFLIN
	GO TO GOTLIN
RDLIN,
	LOKCTL = 1
	INCR II
	IF (II/500*500 .EQ. II) XCALL OUTPT (1,70,1,DIS,1)
	XCALL IOS (5,ORDLIN,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO EOFLIN
	IF (LLOC .NE. 'O') GOTO RDLIN

GOTLIN,
	IF (LQTYOR.EQ.0.AND.LQTYBO.EQ.0) GO TO RDLIN
;;;	IF (LOCATN.NE.BLANKS.AND.LOCATN.NE.LLOC) GOTO RDLIN
	IF (RPTYP.EQ.1.AND.(LSTATS.NE.1.OR.LSTOKT.NE.'S')) GOTO RDLIN
	IF (RPTYP.EQ.2.AND.(LSTATS.NE.1.OR.LSTOKT.EQ.'S')) GOTO RDLIN
	IF (RPTYP.EQ.3.AND.LSTATS.NE.1) GOTO RDLIN
	IF (RPTYP.EQ.4.AND.LSTOKT.EQ.'S') GOTO RDLIN
FNDHDR,
	IF (OORDNO.EQ.LORDNO) GOTO FOUND
	IF (OORDNO.GT.LORDNO) GO TO RDLIN
RDHDR,
	LOKCTL = 1
	XCALL IOS (4,ORDHDR,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO EOFLIN
	IF (OORDDT.EQ.0) GOTO RDHDR
	GO TO FNDHDR
FOUND,
;;;	DATE = LPRMDT
;;;	IF (DATEFL.EQ.'R'.OR.LPRMDT.EQ.0) DATE = LEXSDT
;;;	IF (STDAT.NE.0.AND.(DATE.LT.STDAT.OR.DATE.GT.ENDAT)) GOTO RDLIN
	BIORDT = DATE
	BCUSNO = OCUSNO
	BCUSNM = OCUSNM
	BORDDT = DATE
	BLOC = OLOC
	BSHPTO = 'N'
	IF (OSHPNM.NE.'SAME') BSHPTO = 'Y'
	BCUSPO = OPONO
	BITMNO = LITMNO
	BDESCR = LDESCR
	BPRDCT = LPRDCD
	BORDNO = LORDNO
	BQTYBO = LQTYBO
	BQTYOR = LQTYOR
	BUNPRC = LPRICE
	BODISC = LODISC
	BLDISC = LDISC
	BIITMN = LITMNO
	BICUNO = OCUSNO
	BILOC = OLOC
	BSTOKD = LSTOKT
	BORTYP =
	IF (LSTATS.EQ.2.AND.LQTYBO.GT.0) BORTYP = 'O'
	INCR ADDCNT
	IRC051 = ADDCNT
	LOKCTL = 1
	XCALL IOS (6,BAKORD,WRITE,LOKCTL)
	IF (LOKCTL.EQ.3) GO TO END
	LOKCTL = 1
	XCALL IOS (7,BOINDX,WRITE,LOKCTL)
	IF (LOKCTL.EQ.3) GO TO END
	GO TO RDLIN
EOFLIN,
	CLOSE 6
	SWITCH = 5
	XCALL FILES (6,'U',51,SWITCH)
	IF (SWITCH.EQ.9) GO TO END
	LOKCTL = 1
	XCALL IO (6,BAKORD,1,READ,LOKCTL)
	REC051 = ADDCNT
	CUSRPT = CUSFLG
	STDATE(1,4) = STDAT(3,6)
	STDATE(5,6) = STDAT(1,2)
	ENDATE(1,4) = ENDAT(3,6)
	ENDATE(5,6) = ENDAT(1,2)
	RPTTYP = RPTYP
	DATFLG = DATEFL
	LOKCTL = 1
	XCALL IO (6,BAKORD,1,WRITE,LOKCTL)
	CLOSE 6
	CLOSE 7
	IF (ADDCNT.LT.2) XCALL MESAG ('NO ORDERS MATCH CRITERIA',2)
	IF (ADDCNT.LT.2) XCALL FILES (7,'O',52,4)
	IF (ADDCNT.LT.2) XCALL FILES (6,'O',51,4)
	IF (ADDCNT.LT.2) GO TO OPEN6
	CALL CLOSE2
	RCNT = REC051
	IF (ITMFLG.EQ.0) GO TO BYCUST
	PRGNAM = 'BOITEM'
	SWITCH = 5
	XCALL SNMSG (SNDMSG,SWITCH)
	XCALL PGCHN ('CP:SRTBIT',0)
BYCUST,
	PRGNAM = 'BOCUST'
	SWITCH = 5
	XCALL SNMSG (SNDMSG,SWITCH)
	XCALL PGCHN ('CP:SRTBCU',0)
SRTMSG,
	XCALL MESAG ('ORDER FILES MUST BE SORTED FIRST',2)
	CALL CLOSE1
	GO TO END1
END,
	XCALL WATE(3,V)
	CALL CLOSE4
END1,
	XCALL PGCHN ('CP:CPMENU',1)
INPUT,
	XCALL INPUT(ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
CLOSE4,
	XCALL FILES (6,'O',51,4)
CLOSE3,
	XCALL FILES(7,'O',52,4)
CLOSE2,
	XCALL FILES(5,'I',45,4)
CLOSE1,
	XCALL FILES(4,'I',44,4)
CLOS10,
	XCALL FILES(10,'I',41,4)
	RETURN
END
