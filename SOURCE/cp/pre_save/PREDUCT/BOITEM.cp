;  BOITEM / COP 
;
;
;		::PCPYCOP.DEF::
;*********************************************************************
;		CUSTOMER ORDER PROCESSING 
;		
;		RELEASED: AUGUST 1, 1984 (d70s10)
;***********************************************************************
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984
;		MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;
;		PROGRAM TO PRINT CUSTOMER ORDER STATUS REPORTS BY ITEM
;
RECORD
	,A64,'THIS MATERIAL CONTAINS THE VALUABLE PROPERTIES AND TRADE SECRETS'
	,A62,'OF MCBA, EMBODYING CONFIDENTIAL INFORMATION AND IDEAS, NO PART'
	,A56,'OF WHICH MAY BE USED AND/OR DISCLOSED WITHOUT MCBAs DULY'
	,A55,'AUTHORIZED LICENSE AGREEMENT AND/OR WRITTEN PERMISSION.'
	,A61,'COPYRIGHT (C) MCBA, AN UNPUBLISHED WORK. ALL RIGHTS RESERVED.'

RECORD BOINDX  		
		.INCLUDE 'DEF:RD052A.DEF'
RECORD DUMINV		
		.INCLUDE 'DEF:RD041B.DEF'
RECORD BAKORD, X	
		.INCLUDE 'DEF:RD051A.DEF'
RECORD	,X		
		.INCLUDE 'DEF:RD051B.DEF'
RECORD SNDMSG
		,A3,'CP:'
	PRGNAM	,A6
	RCNT	,D5
		,D5
		,D3,052
RECORD LEGND1
		,A14,'FOR LOCATION: '
	LEGLOC	,A3
		,A3
		,A3,'BY '
	DATTYP	,A9
		,A5,' DATE'
		,A3
		,A5,'FROM '
	LGSTDT	,A8
		,A4,' TO '
	LGENDT	,A8
RECORD LEGND2
		,A41,'NOTE: DOLLAR AMOUNTS ARE FULLY DISCOUNTED'
RECORD HDR1
		,A11,'ITEM NUMBER'
		,A33
		,A4, 'CUST'
		,A31
		,A5, 'ORDER'
		,A3
	SCHORD	,A7
		,A5
		,A3, 'QTY'
		,A4
		,A3,'QTY'
		,A2
		,A8, 'CUSTOMER'
		,A7
		,A3, 'NET'
		,A3
RECORD HDR2
		,A16, 'ITEM DESCRIPTION'
		,A15
		,A7,'STOCKED'
		,A1
		,A3,'LOC'
		,A2
		,A6, 'NUMBER'
		,A2
		,A13, 'CUSTOMER NAME'
		,A14
		,A6, 'NUMBER'
		,A4
		,A4, 'DATE'
		,A6
		,A3,'ORD'
		,A4
		,A3, 'B/O'
		,A2
		,A9, 'PO NUMBER'
		,A5
		,A6, 'AMOUNT'
		,A1
RECORD TITLE
	RPTNAM	,A51
RECORD
	RNAME1	,A35,'PRINT CUSTOMER ORDER STATUS REPORTS'
	BLANKS	,A15
	DASHES	,A30,'------------------------------'
	ENDSW	,D1
	STRTIT	,A15
	ENDITM	,A15
	STXCTL	,D1
	LINES	,D5
	LOCAMT	,D9
	SPLFIL	,A14
	DATE	,D6
	ITMAMT	,D9
	TOTAMT	,D10
	TORAMT	,D10
	TOSAMT	,D10
	IORAMT	,D9
	LORAMT	,D9
	DECMAL	,D8
	ITMCNT	,D4
	LIT1	,A10,'$ ORDERED:'
	LIT2	,A9,'$ ON B/O:'
	LSTLOC	,A2
	LSTITM	,A15
	DTMASK	,A8,'ZX/XX/XX'
	MASK	,A7, 'ZZZ,ZZX'
	MASK2	,A14, '$$$,$$$,$$$.XX'
	TOTORD	,D6
	LOCBO	,D6
	LOCORD	,D6
	TOTQTY	,D6
	LINCNT	,D2,60
	PGCNT	,D3
	PLINE	,A132
	PRTCTL	,D3
	SAVDSC	,A30
	SAVLOC	,A2
	SVBTYP	,A1
	CONTER	,D4
	NETAMT	,D8
	DATEFL	,A1
	LPSW	,D2
	LPARG	,D1
	RPTNUM	,D3
	PRTTYP	,A1
	RPTYP	,D1
	V	,D1
	SWITCH	,D1
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1
	JUST	,D1
	PRNTSW	,D1
PROC
	XCALL TERID (V)
	XCALL OUTPT (2,1,1,'\',1)
	SWITCH = 5
	XCALL FILES (10,'I',41,SWITCH)
	LOKCTL = 1
	XCALL IO (10,DUMINV,1,READ,LOKCTL)
	JUST = JSTIFY
	CLOSE 10
	DUMINV =
	SWITCH = 5
	XCALL FILES(6,'I',51,SWITCH)
	LOKCTL = 1
	XCALL IO (6,BAKORD,1,READ,LOKCTL)
	SAVLOC = RPTLOC
	RPTYP = RPTTYP
	CALL RPTYPE
	LEGLOC = RPTLOC
	IF (RPTLOC.EQ.'  ') LEGLOC = 'ALL'
	DATTYP = 'REQUESTED'
	IF (DATFLG.EQ.'P') DATTYP = 'PROMISED'
	LGSTDT = STDATE, DTMASK
	LGENDT = ENDATE, DTMASK
DISPLA,
	LINCNT = 60
	TOTAMT =
	TORAMT =
	TOSAMT =
	LSTLOC =
	LSTITM =
	XCALL OUTPT (1,1,2,RNAME1,1)
	XCALL OUTPT (2,1,0,TITLE,1)
	STXCTL =
	IF (JUST) STXCTL = 3
	XCALL STENO (STRTIT,ENDITM,'ITEM #',15,STXCTL,V)
	IF (STXCTL) GOTO END
	ENDSW =
	ITMCNT =
	XCALL WATE(3,V)
	CLOSE 7
	SWITCH = 5
	XCALL FILES (7,'I',52,SWITCH)		;FILE # 52 -- BOINDX FILE
	LOKCTL = 1
	XCALL IO (6,BAKORD,1,READ,LOKCTL)
	IF (DATFLG.EQ.'R') SCHORD = 'REQUEST'
	IF (DATFLG.EQ.'P') SCHORD = 'PROMISE'
	DATEFL = DATFLG
	LOKCTL = 1
	XCALL IOS (7,BOINDX,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO NOFIND
FNDITM,
	LOKCTL = 1
	XCALL IOS (7,BOINDX,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO NOFIND
	IF (BIITMN.EQ.']]]]]]') GOTO NOFIND
	IF (STRTIT.EQ.BLANKS) GO TO FOUND
	IF (BIITMN.GE.STRTIT.AND.BIITMN.LE.ENDITM) GO TO FOUND
	IF (BIITMN.LT.STRTIT) GO TO FNDITM
NOFIND,
	IF (STRTIT.EQ.BLANKS) GOTO NOBAKS
	XCALL MESAG('NO ITEMS FOUND IN RANGE',1)
	GO TO DISPLA
NOBAKS,
	XCALL MESAG('NO ITEMS EXIST FOR THIS REPORT',1)
	GO TO END
RPTYPE,
	IF (RPTYP.EQ.1) RPTNAM =
&		'BACKORDER REPORT BY ITEM - STOCKED ITEMS ONLY'
	IF (RPTYP.EQ.2) RPTNAM =
&		'BACKORDER REPORT BY ITEM - NON-STOCKED ITEMS ONLY'
	IF (RPTYP.EQ.3) RPTNAM =
&		'BACKORDER REPORT BY ITEM - ALL ITEMS'
	IF (RPTYP.EQ.4) RPTNAM =
&		'OPEN ORDERS BY ITEM - NON-STOCKED ITEMS ONLY'
	IF (RPTYP.EQ.5) RPTNAM = 'OPEN ORDERS BY ITEM - ALL ITEMS'
	RETURN
RLOOP,
	LOKCTL = 1
	XCALL IOS (7,BOINDX,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO EOF2
	IF (BIITMN.EQ.']]]]]]') GOTO EOF2
	IF (STRTIT.EQ.BLANKS) GO TO FOUND
	IF (BIITMN.GT.ENDITM) GO TO EOF2
FOUND,
	LOKCTL = 1
	XCALL IO (6,BAKORD,IRC051,READ,LOKCTL)
	IF (CONTER.EQ.1) PLINE(1,30) = SAVDSC
	IF ((BILOC.NE.LSTLOC.AND.LSTITM.NE.BLANKS).OR.(BILOC.EQ.LSTLOC.AND.
&		BIITMN.NE.LSTITM)) CALL PSUB1
	IF (BIITMN.NE.LSTITM) CALL PSUB
	INCR LINES
	INCR CONTER
	IF (LSTLOC.NE.BILOC) LOCAMT =
	IF (LSTLOC.NE.BILOC) LSTLOC = BILOC
	TOTORD = TOTORD + BQTYOR
	TOTQTY = TOTQTY + BQTYBO
	LOCORD = LOCORD + BQTYOR
	LOCBO = LOCBO + BQTYBO
	NETAMT = (BQTYOR*BUNPRC) - (BQTYOR*BUNPRC*BLDISC/100)
	NETAMT = NETAMT - (NETAMT*BODISC/100)
	PLINE (35,35) = BSTOKD
	PLINE (41,42) = BLOC
	PLINE (45,50) = BCUSNO
	PLINE (53,77) = BCUSNM
	PLINE (80,85) = BORDNO, 'ZZZZZX'
	DATE (5,6) = BORDDT (1,2)
	DATE (1,4) = BORDDT (3,6)
	PLINE (88,95) = DATE,DTMASK
	PLINE (98,102) = BQTYOR,MASK
	PLINE (105,109) = BQTYBO, MASK
	PLINE (112,121) = BCUSPO
	PLINE (123,132) = NETAMT,'ZZZ,ZZZ.XX'
	TORAMT = TORAMT + NETAMT
	IORAMT = IORAMT + NETAMT
	LORAMT = LORAMT + NETAMT
	DECMAL = (BUNPRC*BQTYBO) - (BUNPRC*BQTYBO*BLDISC/100)
	DECMAL = DECMAL - (DECMAL*BODISC/100)
	IF (BORTYP.EQ.'O') SVBTYP = BORTYP
	IF (BORTYP.NE.'O') TOTAMT = TOTAMT + DECMAL
	IF (BORTYP.EQ.'O') TOSAMT = TOSAMT + DECMAL
	ITMAMT = ITMAMT + DECMAL
	LOCAMT = LOCAMT + DECMAL
	CALL PRINT
	GO TO RLOOP
PSUB,
	IF (LSTITM.EQ.BLANKS) GO TO FIRST
	IF (CONTER.EQ.1) CALL PRINT
	IF (CONTER.EQ.1) GOTO NOSUB
	XCALL LINFD (1)
	INCR LINCNT
	PLINE (39,50) = 'ITEM TOTALS:'
	PLINE (74,80) = TOTORD, MASK
	PLINE (82,88) = 'ORDERED'
	PLINE (103,109) = TOTQTY, MASK
	PLINE (111,121) = 'BACKORDERED'
	CALL PRINT
	IF (SVBTYP.EQ.'O') PLINE (38,56) = '(NOT BACKORDERABLE)'
	PLINE (70,79) = LIT1
	PLINE (80,92) = IORAMT,MASK2
	PLINE (102,110) = LIT2
	PLINE (111,123) = ITMAMT, MASK2
	CALL PRINT
NOSUB,
	PLINE (1,30) = DASHES
	PLINE (31,60) = DASHES
	PLINE (61,90) = DASHES
	PLINE (91,120) = DASHES
	PLINE (121,132) = DASHES
	CALL PRINT
	XCALL LINFD (1)
	LINCNT = LINCNT + 1
	LOCBO =
	LOCORD =
	LOCAMT =
	TOTQTY =
	TOTORD =
	ITMAMT =
	LORAMT =
	IORAMT =
	IF (ENDSW.EQ.1) RETURN
FIRST,
	SVBTYP = BORTYP
	INCR ITMCNT
	LSTITM = BITMNO
	LSTLOC = BILOC
	LINES =
	PLINE (1,15) = BITMNO
	IF (JUST) XCALL LEFTJ (PLINE(1,15),15)
	SAVDSC = BDESCR
	CONTER =
	RETURN
PSUB1,
	IF (CONTER.EQ.1) CALL PRINT
	INCR CONTER
	IF (CONTER.NE.2) XCALL LINFD (1)
	IF (LINES.EQ.1.OR.SAVLOC.NE.'  ') GOTO ONELIN
	PLINE (32,39) = 'LOCATION'
	PLINE (41,42) = LSTLOC
	PLINE (44,50) = 'TOTALS:'
	PLINE (74,80) = LOCORD, MASK
	PLINE (82,88) = 'ORDERED'
	PLINE (103,109) = LOCBO,MASK
	PLINE (111,121) = 'BACKORDERED'
	CALL PRINT
	PLINE (70,79) = LIT1
	PLINE (80,92) = LORAMT,MASK2
	PLINE (102,110) = LIT2
	PLINE (111,123) = LOCAMT, MASK2
	CALL PRINT
	XCALL LINFD (1)
	INCR LINCNT
ONELIN,
	LINES =
	LOCAMT =
	LOCBO =
	LOCORD =
	LORAMT =
	IF (CONTER.NE.2) INCR LINCNT
	IF (ENDSW.EQ.1) GOTO PSUB
	RETURN

;**************************************************************

PRINT,
	IF (PRNTSW.NE.1) CALL PRNTON
	XCALL LPOUT (LINCNT,PGCNT,PLINE,TITLE,HDR1,HDR2,'NO HDR3',LEGND1,
&		LEGND2,'NO LEGEND',0,132,PRTCTL,0,LPSW,RPTNUM,PRTTYP)
	RETURN

;**************************************************************

PRNTON,
	XCALL OUTPT (2,1,1,TITLE,1)
	SPLFIL (5,6)  = 'EU'			; BACKORDER ITEMS - STOCKED
	IF (RPTYP.EQ.2) SPLFIL (6,6) = 'V'	; BACKORDER ITEMS = NON STOCKED
	IF (RPTYP.EQ.3) SPLFIL (6,6) = 'W'	; BACKORDER ITEMS - ALL STOCKED
	IF (RPTYP.EQ.4) SPLFIL (6,6) = 'X'	; OPEN CUSTOMER ORDERS - NON
	IF (RPTYP.EQ.5) SPLFIL (6,6) = 'Y'	; OPEN CUSTOMER ORDERS - ALL
	LPSW = 1
	XCALL LPON (LPSW,SPLFIL)
	IF (LPSW.EQ.0) XCALL PGCHN ('CP:UNPRBO',1)
	LPARG = 2
	IF (LPSW.EQ.2) LPARG = 4
	XCALL WATE (LPARG,V)
	PRNTSW = 1
	PGCNT = 0
	LINCNT = 61
	RETURN

;**************************************************************

EOF2,
	ENDSW = 1
	IF (CONTER.EQ.1) PLINE (1,30) = SAVDSC
	CALL PSUB1
	LSTITM =
	IF (PRNTSW.EQ.0) XCALL MESAG ('NO RECORDS FIT THESE PARAMETERS',1)
	IF (PRNTSW.EQ.1.AND.STRTIT.NE.BLANKS) XCALL LPOFF(LPSW,SPLFIL,PGCNT)
	IF (PRNTSW.EQ.1.AND.STRTIT.NE.BLANKS) PRNTSW =
	IF (STRTIT.NE.BLANKS) GO TO DISPLA
	LOKCTL = 1
	XCALL IO (6,BAKORD,1,READ,LOKCTL)
	PLINE (4,8) = ITMCNT, MASK
	PLINE (10,35) = 'ITEMS REPORTED AT LOCATION'
	PLINE (37,38) = RPTLOC
	IF (RPTLOC.EQ.'  ') PLINE (28,40) = 'ALL LOCATIONS'
	IF (DATFLG.EQ.'R') PLINE(42,58) = 'REQUESTED BETWEEN'
	IF (DATFLG.EQ.'P') PLINE(43,58) = 'PROMISED BETWEEN'
	PLINE (60,67) = STDATE,DTMASK
	PLINE (69,71) = 'AND'
	PLINE (73,80) = ENDATE,DTMASK
	IF (STDATE.EQ.ENDATE) PLINE (52,80) = 'ON                           '
	IF (STDATE.EQ.ENDATE) PLINE (55,62) = STDATE,DTMASK
	IF (STDATE.EQ.0) PLINE (42,80) =
	PLINE (93,108) = 'TOTAL $ ORDERED:'
	PLINE (109,122) = TORAMT,MASK2
	LINCNT = LINCNT - 3
	CALL PRINT
	PLINE (94,108) = 'TOTAL $ ON B/O:'
	PLINE (109,122) = TOTAMT,MASK2
	CALL PRINT
	PLINE (97,108) = 'TOTAL $ O/S:'
	PLINE (109,122) = TOSAMT, MASK2
	CALL PRINT
END,
	IF (PRNTSW.EQ.1) XCALL LPOFF(LPSW,SPLFIL,PGCNT)
	XCALL WATE(4,V)
	LOKCTL = 1
	XCALL IO (6,BAKORD,1,READ,LOKCTL)
	IF (CUSRPT) GO TO BYCUST
	XCALL PGCHN ('CP:UNPRBO',1)
BYCUST,
	PRGNAM = 'BOCUST'
	RCNT = REC051
	SWITCH = 5
	XCALL SNMSG (SNDMSG,SWITCH)
	XCALL PGCHN ('CP:SRTBCU',0)
END
