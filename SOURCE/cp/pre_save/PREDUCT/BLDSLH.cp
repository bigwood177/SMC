;  BLDSLH / COP 
;
;
;		::PCPYCOP.DEF::
;*********************************************************************
;		CUSTOMER ORDER PROCESSING 
;		
;		RELEASED: AUGUST 1, 1984 (d70s10)
;***********************************************************************
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984
;		MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;
;		PROGRAM TO BUILD INITAL SLSHST FILE THAT CAN BE
;		POSTED INTO THE SALES SUMMARY FILE.  THIS IS USED
;		LOAD SALES HISTORY FOR PAST REPORTING PERIODS.
;		INDIRECT COMMAND FILE AVAILABLE FOR COMPILE AND LINK
;
;		YOU MUST HAVE VALID CUSTOMER MASTER AND ITEM MASTER
;			FILES TO RUN THIS PROGRAM.  BE SURE TO
;			CHECK FILES LENGTHS!
;
;		DO NOT LEAVE THIS PROGRAM ON USER'S DISK
;		AFTER INITIAL SLSHST FILE IS BUILT
;
;
RECORD
	,A64,'THIS MATERIAL CONTAINS THE VALUABLE PROPERTIES AND TRADE SECRETS'
	,A62,'OF MCBA, EMBODYING CONFIDENTIAL INFORMATION AND IDEAS, NO PART'
	,A56,'OF WHICH MAY BE USED AND/OR DISCLOSED WITHOUT MCBAs DULY'
	,A55,'AUTHORIZED LICENSE AGREEMENT AND/OR WRITTEN PERMISSION.'
	,A61,'COPYRIGHT (C) MCBA, AN UNPUBLISHED WORK. ALL RIGHTS RESERVED.'

RECORD SLSHST  		
		.INCLUDE 'DEF:RD055A.DEF'
RECORD CUSMAS   	
		.INCLUDE 'DEF:RD001A.DEF'
RECORD ,X		
		.INCLUDE 'DEF:RD001B.DEF'
RECORD DUMSLH   	
		.INCLUDE 'DEF:RD055B.DEF'
RECORD CUSIDX  		
		.INCLUDE 'DEF:RD002A.DEF'
RECORD INVMAS		
		.INCLUDE 'DEF:RD041A.DEF'
RECORD DUMINV		
		.INCLUDE 'DEF:RD041B.DEF'
RECORD INVIDX  		
		.INCLUDE 'DEF:RD042A.DEF'
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD SNDMSG
	PRGNAM	,A9
	RCNT	,D5
	OCNT	,D5
	FILENO	,D3,055
RECORD
	ALPHA	,A8
	DTMASK	,A8,'ZX/XX/XX'
	OPTION	,D1
	ENTRY	,A15
	INXCTL  ,D1
	CNGCTL	,D1
	WHATNO	,D2
	DECMAL	,D18
	SELECT	,D1
	CUSCNT	,D5
	SLHREC	,D5
	MAXCNT	,D5
	MASK	,A6,'XXXXXX'
	ADDCNT	,D5
	TITEM	,A30
	KITEM	,A15
	KCUSNO	,D6
	KDOCNO	,D6
	RECNO	,D5
	TNAME	,A25
	KEY   	,A6
	KEY2	,A15
	CKEY	,A6
	ORGSLH	,D5
	SLHCNT	,D5
	ITMCNT	,D5
	BSEND	,D5
	BSMID	,D5
	SRCCTL	,D1
	BLANKS	,A25
	SWITCH	,D1
	V	,D1
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1
	NXTPRG	,A9
	JUST	,D1
	DHITMN	,A15
PROC
	XCALL TERID (V)
	SWITCH = 1
	XCALL FILES (1,'I',01,SWITCH)		;FILE # 01 -- CUSMAS FILE
	IF (SWITCH.EQ.9) GO TO INUSE
	XCALL FILES (2,'I',02,SWITCH)		;FILE # 02 -- CUSIDX FILE
	IF (SWITCH.EQ.9) GO TO INUSE2
	XCALL FILES (3,'U',55,SWITCH)		;FILE # 55 -- SLSHST FILE
	IF (SWITCH.EQ.9) GO TO INUSE3
	XCALL FILES (4,'I',41,SWITCH)		;FILE # 41 -- INVMAS FILE
	IF (SWITCH.EQ.9) GO TO INUSE4
	XCALL FILES (5,'I',42,SWITCH)		;FILE # 42 -- INVIDX FILE
	IF (SWITCH.EQ.9) GO TO INUSE5
	SWITCH = 5
	XCALL FILES(13,'I',55,SWITCH)
;*******************************************************************************
;		READ FILES FOR RECORD COUNTS
READ,
	LOKCTL = 1
	XCALL IO (1,CUSMAS,1,READ,LOKCTL)
	CUSCNT = ORG001
	LOKCTL = 1
	XCALL IO (13,DUMSLH,1,READ,LOKCTL)
	MAXCNT = MAX055
	ORGSLH = ORG055
	SLHCNT = REC055
	LOKCTL = 1
	XCALL IO (4,DUMINV,1,READ,LOKCTL)
	JUST = JSTIFY
;*******************************************************************************
;		DISPLAY TRX MENU
BEGIN,
	SELECT = -1
	XCALL TMENU ('MANUAL ENTRY OF SALES HISTORY',SELECT,V)
	GO TO (DISPLA,DISPLA,DISPLA,END),SELECT
	GO TO END
;*******************************************************************************
;		DISPLAY SCREEN
DISPLA,
	UNLOCK 3
	CNGCTL =
	SLSHST =
	XCALL OUTPT (3,10,2,'1. INV/CRM #',V)
	XCALL OUTPT (4,10,0,'2. INV/CRM DATE',V)
	XCALL OUTPT (5,10,0,'3. CUSTOMER #',V)
	XCALL OUTPT (6,10,0,'4. ITEM #',V)
	XCALL OUTPT (7,10,0,'5. SALE QTY',V)
	XCALL OUTPT (8,10,0,'6. SALE AMOUNT',V)
	XCALL OUTPT (9,10,0,'7. COST',V)
	XCALL OUTPT (10,10,0,'8. ORDER DATE',V)
	XCALL OUTPT (7,44,0,'9. SALESMAN',V)
	XCALL OUTPT (8,43,0,'10. TERRITORY',V)
	XCALL OUTPT (9,43,0,'11. LOCATION',V)
	XCALL OUTPT (10,43,0,'12. TAXABLE ?',V)
;*******************************************************************************
;		INPUT INVOICE # FOR TRX
DOCNO,
	IF (SELECT.EQ.1.AND.REC055.GE.MAX055) GOTO FULL
	CTL = '03,27,06,00,#E'
	CALL INPUT
	GO TO (DISPLA,BEGIN), INXCTL
	KDOCNO = ENTRY (1,6)
	IF (SELECT.GE.2.AND.CNGCTL.EQ.0) GOTO CUSTNO
	IF (ENTRY.EQ.BLANKS.AND.HINVNO.NE.0) GO TO SAMDOC
	IF (KDOCNO.EQ.0) GOTO DOCNO
	HINVNO = KDOCNO
	GO TO (ANYCNG), CNGCTL
	GO TO DOCDTE
SAMDOC,
	CTL = '03,27,06'
	DECMAL = HINVNO
	CALL DSPNUM
	CTL = '04,27,06'
	DECMAL (1,6) = HINVDT
	CALL DSPDTE
	CTL = '05,27,06'
	DECMAL = HCUSNO
	CALL DSPNUM
	XCALL OUTPT (5,36,0,NAME,V)
	GO TO (ANYCNG), CNGCTL
	GO TO ITEM
;*******************************************************************************
DOCDTE,
	CTL = '04,27,06,00,D '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	IF (ENTRY.EQ.BLANKS.AND.HINVDT.NE.0) GO TO SAMDTE
	HINVDT = ENTRY (1,6)
	IF (HINVDT.EQ.0) GOTO DOCDTE
	GO TO (ANYCNG), CNGCTL
	GO TO CUSTNO
SAMDTE,
	ALPHA = HINVDT, DTMASK
	XCALL OUTPT (4,27,0,ALPHA,V)
	GO TO (ANYCNG), CNGCTL
;*******************************************************************************
;		INPUT CUSTOMER # FOR TRX
CUSTNO,
	CTL = '05,27,06,00,# '
	XCALL OUTPT (5,36,0,BLANKS,V)
	CALL INPUT
	GO TO (DISPLA), INXCTL
	KCUSNO = ENTRY (1,6)
	IF (ENTRY.EQ.BLANKS) GO TO SAMCUS
	KEY = KCUSNO,MASK
	BSEND = CUSCNT
	XCALL SERCH (2,CUSIDX,KEY,1,6,BSEND,BSMID,SRCCTL,1,7,11,0,0,0,0)
	GO TO (BADCUS), SRCCTL
	LOKCTL = 1
	XCALL IO (1,CUSMAS,IRC001,READ,LOKCTL)
	HCUSNO = CUSNO
	TNAME = NAME
	HCUSCD = CUSCD
	HCUSC2 = CUSCD2
	XCALL OUTPT (5,44,0,TNAME,V)
	IF (SELECT.GE.2.AND.CNGCTL.EQ.0) GOTO FNDTRX
	GO TO (ANYCNG),CNGCTL
	GO TO ITEM
SAMCUS,
	IF (CUSNO.EQ.0) GO TO BADCUS
	KCUSNO = CUSNO
	HCUSNO = CUSNO
	ALPHA (1,6) = CUSNO, 'ZZZZZX'
	XCALL OUTPT (5,27,0,ALPHA(1,6),V)
	XCALL OUTPT (5,44,0,TNAME,V)
	IF (SELECT.NE.1.AND.CNGCTL.EQ.0) GO TO FNDTRX
	GO TO (ANYCNG), CNGCTL
	GO TO ITEM
BADCUS,
	XCALL MESAG('CUSTOMER NOT ON FILE',1)
	GO TO CUSTNO
;*******************************************************************************
;		INPUT ITEM FOR TRX
ITEM,
	CTL = '06,27,15,01,A '
	XCALL OUTPT (6,44,0,BLANKS,V)
	CALL INPUT
	GO TO (DISPLA),INXCTL
	IF (JUST) XCALL FRMAT (ENTRY(1,15),15)
	XCALL OUTPT (6,27,0,ENTRY(1,15),V)
	KITEM = ENTRY(1,15)
	KEY2 = KITEM
	BSEND = ORG041
	SRCCTL =
	XCALL SERCH(5,INVIDX,KEY2,1,15,BSEND,BSMID,SRCCTL,1,16,20,0,0,0,0)
	GO TO (BADITM),SRCCTL
	LOKCTL = 1
	XCALL IO (4,INVMAS,IRC041,READ,LOKCTL)
	HITMNO = KITEM
	TITEM = DESCR
	HPRDCD = PRDCAT
	HPRDC2 = USRDEF
	XCALL OUTPT (6,44,0,TITEM,V)
	GO TO (ANYCNG),CNGCTL
	GO TO QTY
;*******************************************************************************
;		ITEM NOT FOUND
BADITM,
	XCALL MESAG('ITEM NOT ON FILE',1)
	GO TO ITEM
;*******************************************************************************
;		INPUT QTY FOR TRX
QTY,
	CTL = '07,27,05,00,#-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	HQTY = ENTRY (1,7)
	GO TO (ANYCNG),CNGCTL
;*******************************************************************************
;		INPUT AMOUNT FOR TRX
AMOUNT,
	CTL = '08,27,08,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	HSALE = ENTRY (1,8)
	GO TO (ANYCNG),CNGCTL
;*******************************************************************************
;		INPUT COST FOR TRX
COST,
	CTL = '09,27,08,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	HCOST = ENTRY (1,8)
	GO TO (ANYCNG), CNGCTL
ORDDTE,
	CTL = '10,27,06,00,D '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO SAMDT2
	HORDDT = ENTRY (1,6)
	GO TO (ANYCNG), CNGCTL
	GO TO SALMAN
SAMDT2,
	ALPHA = HINVDT, DTMASK
	HORDDT = HINVDT
	XCALL OUTPT (10,27,0,ALPHA,V)
	GO TO (ANYCNG), CNGCTL
SALMAN,
	CTL = '07,58,02,00,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	IF (ENTRY.EQ.BLANKS) ENTRY (1,2) = SLSMAN
	HSLSMN = ENTRY (1,2)
	IF (HSLSMN.LT.1) GO TO SALMAN
	XCALL OUTPT (7,58,0,ENTRY(1,2),V)
	GO TO (ANYCNG), CNGCTL
TERR,
	CTL = '08,58,02,00,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	IF (ENTRY.EQ.BLANKS) ENTRY (1,2) = TERR
	HTERR = ENTRY (1,2)
	XCALL OUTPT (8,58,0,HTERR,V)
	GO TO (ANYCNG), CNGCTL
LOCAT,
	CTL = '09,58,02,00,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	IF (ENTRY.EQ.BLANKS) ENTRY (1,2) = LOC
	HLOC = ENTRY (1,2)
	XCALL OUTPT (9,58,0,HLOC,V)
	GO TO (ANYCNG), CNGCTL
TAXBL,
	CTL = '10,58,01,00,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	IF (ENTRY.NE.BLANKS) GO TO TAX2
	IF (SELECT.GT.1) GO TO TAXBL
	IF (TAXFLG.NE.'   '.AND.TXFLAG.EQ.'Y') ENTRY = 'Y'
	IF (ENTRY.EQ.BLANKS) ENTRY = 'N'
TAX2,
	IF (ENTRY.NE.'N'.AND.ENTRY.NE.'Y') GO TO TAXBL
	HTXFLG = '0'
	IF (ENTRY.EQ.'Y') HTXFLG = '1'
	XCALL OUTPT (10,58,0,ENTRY(1,1),V)
	GO TO ANYCNG
;*******************************************************************************
CNGBR,
	GO TO (QTY,AMOUNT,COST,ORDDTE,SALMAN,TERR,LOCAT,TAXBL), WHATNO - 4
BADCNG,
	CNGCTL = 3
	GOTO ANYCNG
PROCES,
	XCALL WATE(3,V)
	GO TO (ADD,CHANGE), SELECT
;*******************************************************************************
;		ADD TRX TO SLSHST FILE
ADD,
	LOKCTL = 1
	XCALL IO (3,DUMSLH,1,READ,LOKCTL)
	INCR REC055
	IF (REC055.GT.MAX055) GOTO FULL
	SLHCNT = REC055
	LOKCTL = 1
	XCALL IO (3,DUMSLH,1,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IO (3,SLSHST,REC055,WRITE,LOKCTL)
	GO TO FREBUF
;*******************************************************************************
;		FIND TRX IF IN CHANGE OR DELETE MODE
FNDTRX,
	KEY = KCUSNO,MASK
SEARCH,
	BSEND = ORGSLH
	XCALL SERCH (13,SLSHST,KEY,21,26,BSEND,BSMID,SRCCTL,1,8,13,0,0,0,0)
	GOTO (NOFIND), SRCCTL
	BSMID = BSMID - 1
NXTTRX,
	UNLOCK 3
	INCR BSMID
	IF (BSMID.GT.SLHCNT) GO TO NOFIND
	LOKCTL = 1
	XCALL IO (13,SLSHST,BSMID,READ,LOKCTL)
	IF (HINVDT.EQ.0) GO TO NXTTRX
	IF (HCUSNO.NE.KCUSNO.AND.BSMID.LT.ORGSLH) BSMID = ORGSLH
	IF (HCUSNO.NE.KCUSNO) GO TO NXTTRX
	IF (HINVNO.NE.KDOCNO) GO TO NXTTRX
	LOKCTL = 1
	XCALL IO (3,SLSHST,BSMID,READ,LOKCTL)
	SLHREC = BSMID
	CTL =
;*******************************************************************************
;		DISPLAY RECORD
DSPTRX,
	CTL = '04,27,06'
	DECMAL(1,6) = HINVDT
	CALL DSPDTE
	DECMAL = HQTY
	CTL = '07,27,05'
	CALL DSPNUM
	DECMAL = HSALE
	CTL = '08,27,08'
	CALL DSPDLR
	DECMAL = HCOST
	CTL = '09,27,08'
	CALL DSPDLR
	DHITMN = HITMNO
	XCALL OUTPT (6,27,0,DHITMN,V)
	CTL = '10,27,06'
	DECMAL (1,6) = HORDDT
	CALL DSPDTE
	CTL = '07,58,02'
	DECMAL = HSLSMN
	CALL DSPNUM
	XCALL OUTPT (8,58,0,HTERR,V)
	XCALL OUTPT (9,58,0,HLOC,V)
	ENTRY = 'Y'
	IF (HTXFLG.NE.'1') ENTRY = 'N'
	XCALL OUTPT (10,58,0,ENTRY(1,1),V)
	XCALL OUTPT (12,1,1,'RIGHT SALE ?',V)
	CTL = '12,15,01,00,YN'
	CALL INPUT
	GOTO (NXTTRX), INXCTL-1
	XCALL WATE(3,V)
	GOTO (ANYCNG,DELETE), SELECT-1
;*******************************************************************************
NOFIND,
	UNLOCK 3
	XCALL MESAG('RECORD NOT FOUND',1)
	GO TO DISPLA
;*******************************************************************************
;		CHANGE TRX
CHANGE,
	ONERROR CHANGE
	LOKCTL = 1
	XCALL IO (3,SLSHST,SLHREC,WRITE,LOKCTL)
	IF (SELECT.EQ.3) XCALL MESAG('RECORD DELETED',2)
;*******************************************************************************
FREBUF,
	LOKCTL = 1
	XCALL IO (3,DUMSLH,MAX055,READ,LOKCTL)
	LOKCTL = 1
	XCALL IO (3,DUMSLH,1,READ,LOKCTL)
	GO TO DISPLA
;*******************************************************************************
;		DELETE TRX
DELETE,
	LOKCTL = 1
	XCALL IO (3,DUMSLH,1,READ,LOKCTL)
	INCR DEL055
	LOKCTL = 1
	XCALL IO (3,DUMSLH,1,WRITE,LOKCTL)
	HINVDT =
	HQTY =
	HSALE =
	HCOST =
	GO TO CHANGE
;*******************************************************************************
INPUT,
	XCALL INPUT(ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
ANYCNG,
	XCALL ANYCN(CNGCTL,WHATNO)
	GOTO (PROCES,CNGBR,DISPLA), CNGCTL+1
	GO TO CNGBR

;*******************************************************************************
;		DISPLAY SELECTED FIELDS
DSPNUM,
	OPTION = 1
	CALL CALDSP
	RETURN
DSPDTE,
	OPTION = 2
	CALL CALDSP
	RETURN
DSPDLR,
	OPTION = 3
CALDSP,
	XCALL DSPLY(MAX,ROW,COL,DECMAL,OPTION,V)
	RETURN
;*******************************************************************************
FULL,
	XCALL MESAG('SALES HISTORY FILE NOW FULL',2)
END,
	IF (SELECT.NE.4) XCALL WATE(3,V)
	XCALL FILES (1,'I',01,4)
	XCALL FILES (2,'I',02,4)
	XCALL FILES (3,'U',55,4)
	XCALL FILES (4,'I',41,4)
	XCALL FILES (5,'I',42,4)
	SWITCH = 3
	XCALL FILES(3,'U',55,SWITCH)
	IF (SWITCH.EQ.9) GO TO INUSE
	XCALL WATE(4,V)
	SWITCH = 5
	XCALL FILES(3,'U',55,SWITCH)
	LOKCTL = 1
	XCALL IO (3,DUMSLH,1,READ,LOKCTL)
	IF (SELECT.NE.4) PRGNAM = 'CP:UNPSLH'
	IF (SELECT.EQ.4) PRGNAM = 'CP:SLHEDT'
	RCNT = REC055
	OCNT = ORG055
	IF (OCNT.LT.RCNT) GO TO SORTIT
	XCALL FILES(3,'U',55,4)
	NXTPRG = PRGNAM
	XCALL PGCHN (NXTPRG,1)
SORTIT,
	SWITCH = 2
	XCALL SNMSG (SNDMSG,SWITCH)
	ORG055 = REC055
	LOKCTL = 1
	XCALL IO (3,DUMSLH,1,WRITE,LOKCTL)
	CLOSE 3
	XCALL PGCHN ('CP:SRTBLD',0)
INUSE5,
	XCALL WATE(3,V)
	XCALL FILES (4,'I',41,4)
INUSE4,
	XCALL FILES (3,'U',55,4)
INUSE3,
	XCALL FILES (2,'I',02,4)
INUSE2,
	XCALL FILES (1,'I',01,4)
INUSE,
	XCALL PGCHN ('CP:SSSFMN',1)
END
