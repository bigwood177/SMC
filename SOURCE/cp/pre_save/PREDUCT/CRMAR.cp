;  CRMAR / COP 
;
;
;		::PCPYCOP.DEF::
;*********************************************************************
;		CUSTOMER ORDER PROCESSING 
;		
;		RELEASED: AUGUST 1, 1984 (d70s10)
;***********************************************************************
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984
;		MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;
;		CONVERTS CRMHDR FILE TO SALES FILE (USED IN A/R SYSTEM)
;
; ** SALES0 DATA RECORD **
;
RECORD
	,A64,'THIS MATERIAL CONTAINS THE VALUABLE PROPERTIES AND TRADE SECRETS'
	,A62,'OF MCBA, EMBODYING CONFIDENTIAL INFORMATION AND IDEAS, NO PART'
	,A56,'OF WHICH MAY BE USED AND/OR DISCLOSED WITHOUT MCBAs DULY'
	,A55,'AUTHORIZED LICENSE AGREEMENT AND/OR WRITTEN PERMISSION.'
	,A61,'COPYRIGHT (C) MCBA, AN UNPUBLISHED WORK. ALL RIGHTS RESERVED.'
RECORD SALES		
		.INCLUDE 'DEF:RD004A.DEF'
RECORD ,X		
		.INCLUDE 'DEF:RD004B.DEF'
RECORD PRDACT		
		.INCLUDE 'DEF:RD069A.DEF'
RECORD DUMPRD  ,X	
		.INCLUDE 'DEF:RD069B.DEF'
RECORD CRMHDR		
		.INCLUDE 'DEF:RD046A.DEF'
RECORD CRMLIN		
		.INCLUDE 'DEF:RD047A.DEF'
RECORD	,X		
		.INCLUDE 'DEF:RD047B.DEF'
RECORD
	ALPHA	,A5
	CLRCP1	,A13,'041,CP:CRMAR '
	CLRAR4	,A13,'004,CP:CRMAR '
	CLRCP9	,A13,'069,CP:CRMAR '
	KEY	,A6
	KEY2	,A2
	MASK	,A6,'XXXXXX'
	BSEND	,D5
	BSMID	,D5
	BSMD2	,D5
	SRCCTL	,D1
	FACTOR	,D2
	SLSMAX	,D4
	SLSCNT	,D4
	LINORG	,D5
	PDAORG	,D5
	SWITCH	,D1
	V	,D1
	PSTCNT	,D5	,00000
	DECMAL	,D10
	RUNTOT	,D10
	NEXT	,D2
	NINES	,D7,9999999
	ACTARY	,10D7
	AMTARY	,10D8
	N	,D2
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1
PROC
	XCALL TERID (V)
	XCALL OUTPT (1,1,2,'POST CR MEMOS TO ACCOUNTS RECEIVABLE',V)
	XCALL WATE(4,V)
	SWITCH = 2
	XCALL FILES(4,'U',04,SWITCH)		;FILE # 04 -- SALES FILE
	IF (SWITCH.EQ.9) GO TO INUSE1
	SWITCH = 5
	XCALL FILES (13,'I',46,SWITCH)		;FILE # 46 -- CRMHDR FILE
	LOKCTL = 1
	XCALL IOS (13,CRMHDR,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO EOFCHK
CHKREC,
	LOKCTL = 1
	XCALL IOS (13,CRMHDR,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO EOFCHK
	IF (CCUSNM.EQ.']]]]]]') GOTO EOFCHK
	IF (CCUSNM.EQ.']]]CANCEL'.OR.CCRMDT.EQ.0) GOTO CHKREC
	INCR PSTCNT
	GOTO CHKREC
EOFCHK,
	IF (PSTCNT.EQ.0) GO TO NOPOST
	LOKCTL = 1
	XCALL IO (4,SALES,1,READ,LOKCTL)
	SLSCNT = REC004
	SLSMAX = MAX004
	IF (SLSCNT+PSTCNT.GE.SLSMAX) GOTO SLSFUL
	SWITCH = 1
	XCALL FILES(1,'I',42,SWITCH)		;FILE # 42 - ITMIDX FILE
	IF (SWITCH.EQ.9) GO TO INUSE2
	XCALL FILES(9,'I',69,SWITCH)		;FILE # 69 - PRDACT FILE
	IF (SWITCH.EQ.9) GO TO INUSE3
	SWITCH = 5
	XCALL FILES(7,'I',47,SWITCH)			;FILE # 47 - CRMLIN FILE
	LOKCTL = 1
	XCALL IO (7,CRMLIN,1,READ,LOKCTL)
	LINORG = ORG047
	LOKCTL = 1
	XCALL IO (9,PRDACT,1,READ,LOKCTL)
	PDAORG = ORG069
	LOKCTL = 1
	XCALL IO (13,CRMHDR,1,READ,LOKCTL)
RDHDR,
	LOKCTL = 1
	XCALL IOS (13,CRMHDR,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO EOFHDR
	IF (CCUSNM.EQ.']]]]]]') GOTO EOFHDR
	IF (CCUSNM.EQ.']]]CANCEL'.OR.CCRMDT.EQ.0) GO TO RDHDR
	SALES =
	SDOCNO = CCRMNO
	SDOCTP = 3
	SDOCDT = CCRMDT
	SCUSNO = CCUSNO
	SNAME = CCUSNM
	SSLMAN = CSLMAN
	SSLAMT = CSALAM
	SARACT = CARACT
	SMISC = CMISC
	SMSACT = CMSACT
	STAX(1) = CTAX(1)
	STAX(2) = CTAX(2)
	STAX(3) = CTAX(3)
	STXACT(1) = CTXACT(1)
	STXACT(2) = CTXACT(2)
	STXACT(3) = CTXACT(3)
	SFRGHT = CFRGHT
	SFRACT = CFRACT
	SCOST = CCOST
	SAPLNO = CAPLTO
	SCOMM = ((-1)*CCOMDU*CSALAM)#4
	IF (CCOMDU.GT.0) SCOMM = CCOMDU
	RUNTOT =
	ACTARY(1,70) =
	AMTARY(1,80) =
	CALL GTLINS
	INCR SLSCNT
	IF (SLSCNT.GT.SLSMAX) GO TO SLSFUL
	LOKCTL = 1
	XCALL IO (4,SALES,SLSCNT,WRITE,LOKCTL)
	GO TO RDHDR
SLSFUL,
	XCALL OUTPT (2,1,2,'\',1)
	XCALL OUTPT (5,20,0,'THE SALES TRANSACTION FILE IN THE',V)
	XCALL OUTPT (6,20,0,'ACCOUNTS RECEIVABLE SYSTEM DOES',V)
	XCALL OUTPT (7,20,0,'NOT HAVE ENOUGH ROOM TO HOLD NEWLY',V)
	XCALL OUTPT (8,20,0,'PRINTED CR MEMOS - SEE INSTRUCTIONS',V)
	XCALL OUTPT (10,20,0,'AVALIABLE:          NEEDED:',V)
	ALPHA = SLSMAX - SLSCNT, 'ZZZZX'
	XCALL OUTPT (10,31,0,ALPHA,V)
	ALPHA = SLSCNT + PSTCNT, 'ZZZZX'
	XCALL OUTPT (10,48,0,ALPHA,V)
	XCALL MESAG(' ',2)
	STOP
GTLINS,
	BSEND = LINORG
	KEY = CCRMNO, MASK
	XCALL SERCH (7,CRMLIN,KEY,1,6,BSEND,BSMID,SRCCTL,4,17,22,0,0,0,0)
	IF (SRCCTL.EQ.1) RETURN
BACKUP,
	BSMID = BSMID - 1
	IF (BSMID.LT.1) GO TO RDLINS
	LOKCTL = 1
	XCALL IO (7,CRMLIN,BSMID,READ,LOKCTL)
	IF (CLCRNO.EQ.CCRMNO) GO TO BACKUP
RDLINS,
	INCR BSMID
	LOKCTL = 1
	XCALL IO (7,CRMLIN,BSMID,READ,LOKCTL)
	IF (CLCRNO.NE.CCRMNO) GO TO ENDLIN
	IF (CLDESC.EQ.']]]CANCEL') GO TO RDLINS
	IF (CLQTY.GE.0) CLQTY = (-1)*CLQTY	; ALREADY NEGATIVE IF ITEM NOT
						; RETURNED TO INVENTORY
	DECMAL = (CLPRCE*CLQTY) - ((CLDISC*CLPRCE*CLQTY)/100)
	DECMAL = DECMAL - ((DECMAL*CDSCNT)/100)
	DECMAL = (-1)*DECMAL
	RUNTOT = RUNTOT + DECMAL
	KEY2 = CLPDCD
	BSEND = PDAORG
	XCALL SERCH (9,PRDACT,KEY2,1,2,BSEND,BSMD2,SRCCTL,4,10,15,0,0,0,0)
	IF (SRCCTL.EQ.1) PACTNO = NINES
	IF (PACTNO.EQ.0) PACTNO = NINES
	IF (PACTNO.NE.NINES) GO TO SETLIN
	ACTARY (10) = NINES
	AMTARY (10) = AMTARY (10) + DECMAL
	GO TO RDLINS
SETLIN,
	N =
MATCH,
	INCR N
	IF (N.GT.9) GO TO ENDARY
	IF (ACTARY(N).EQ.0) GO TO ENDARY
	IF (PACTNO.EQ.ACTARY(N)) GO TO ENDARY
	GO TO MATCH
ENDARY,
	IF (N.LT.10) ACTARY (N) = PACTNO
	AMTARY (N) = AMTARY (N) + DECMAL
	GO TO RDLINS
ENDLIN,
	NEXT = 1
	N =
STORE,
	INCR N
	IF (N.GT.9) GOTO CHKTOT
	IF (AMTARY(N).EQ.0) GO TO STORE
	SDACTS (NEXT) = ACTARY (N)
	SDAMTS (NEXT) = AMTARY (N)
	INCR NEXT
	GO TO STORE
CHKTOT,
	IF (AMTARY(10).EQ.0) GO TO CHK3
	IF (NEXT.EQ.10) GO TO CHK2
	SDACTS (NEXT) = NINES
	SDAMTS (NEXT) = AMTARY (10)
	GO TO CHK3
CHK2,
	SDACTS (9) = NINES
	SDAMTS (9) = SDAMTS (9) + AMTARY (10)
CHK3,
	DECMAL = SDAMTS(1) + SDAMTS(2) + SDAMTS(3) + SDAMTS(4) + SDAMTS(5)
	DECMAL = DECMAL + SDAMTS(6) + SDAMTS(7) + SDAMTS(8) + SDAMTS(9)
	IF (DECMAL.EQ.RUNTOT) RETURN
	IF (NEXT.GT.1) SDAMTS (NEXT-1) = SDAMTS (NEXT-1) - (DECMAL - RUNTOT)
	RETURN
EOFHDR,
	LOKCTL = 1
	XCALL IO (4,SALES,1,READ,LOKCTL)
	REC004= SLSCNT
	LOKCTL = 1
	XCALL IO (4,SALES,1,WRITE,LOKCTL)
	XCALL FILES(4,'I',04,4)
	XCALL FILES(9,'I',69,4)
	XCALL PGCHN ('CP:PSTCRM',1)
INUSE3,
	XCALL FILES(1,'I',42,4)
	XCALL FILES(4,'I',04,4)
	SWITCH = 2
	XCALL SNMSG (CLRCP9,SWITCH)
	GO TO INUSE
INUSE2,
	XCALL FILES(4,'I',04,4)
	SWITCH = 2
	XCALL SNMSG (CLRCP1,SWITCH)
	GO TO INUSE
INUSE1,
	SWITCH = 2
	XCALL SNMSG (CLRAR4,SWITCH)
INUSE,
	XCALL PGCHN ('UT:CLROF2',1)
NOPOST,
	XCALL FILES (10,'I',41,4)
	XCALL FILES(4,'U',04,4)
	XCALL FILES(2,'I',02,4)
	XCALL FILES(13,'U',46,4)
	XCALL FILES(5,'U',47,4)
	XCALL MESAG('NO CR MEMOS FOUND TO POST',2)
	XCALL PGCHN('CP:CRMENT',1)
	END
